{
    "title": "Caddy v2 autogenerated JSON schema",
    "type": "object",
    "definitions": {
        "admin.api.load": {
            "description": "object\nModule: admin.api.load\n<hr>\n",
            "type": "object"
        },
        "caddy.adapters.caddyfile": {
            "description": "object\nModule: caddy.adapters.caddyfile\n<hr>\n",
            "type": "object"
        },
        "caddy.listeners.tls": {
            "description": "object\nModule: caddy.listeners.tls\n<hr>\ntlsPlaceholderWrapper is a no-op listener wrapper that marks\nwhere the TLS listener should be in a chain of listener wrappers.\nIt should only be used if another listener wrapper must be placed\nin front of the TLS handshake.\n",
            "type": "object"
        },
        "caddy.logging.encoders.console": {
            "description": "object\nModule: caddy.logging.encoders.console\n<hr>\nConsoleEncoder encodes log entries that are mostly human-readable.\n",
            "type": "object",
            "properties": {
                "caller_key": {
                    "description": "string\nModule: caddy.logging.encoders.console\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder",
                    "type": "string"
                },
                "duration_format": {
                    "description": "string\nModule: caddy.logging.encoders.console\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder",
                    "type": "string"
                },
                "level_format": {
                    "description": "string\nModule: caddy.logging.encoders.console\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder",
                    "type": "string"
                },
                "level_key": {
                    "description": "string\nModule: caddy.logging.encoders.console\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder",
                    "type": "string"
                },
                "line_ending": {
                    "description": "string\nModule: caddy.logging.encoders.console\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder",
                    "type": "string"
                },
                "message_key": {
                    "description": "string\nModule: caddy.logging.encoders.console\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder",
                    "type": "string"
                },
                "name_key": {
                    "description": "string\nModule: caddy.logging.encoders.console\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder",
                    "type": "string"
                },
                "stacktrace_key": {
                    "description": "string\nModule: caddy.logging.encoders.console\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder",
                    "type": "string"
                },
                "time_format": {
                    "description": "string\nModule: caddy.logging.encoders.console\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder",
                    "type": "string"
                },
                "time_key": {
                    "description": "string\nModule: caddy.logging.encoders.console\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder",
                    "type": "string"
                }
            }
        },
        "caddy.logging.encoders.filter": {
            "description": "object\nModule: caddy.logging.encoders.filter\n<hr>\nFilterEncoder can filter (manipulate) fields on\nlog entries before they are actually encoded by\nan underlying encoder.\n",
            "type": "object",
            "properties": {
                "fields": {
                    "description": "array\nModule: caddy.logging.encoders.filter\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#FilterEncoder",
                    "type": "array",
                    "items": {
                        "required": [
                            "filter"
                        ],
                        "allOf": [
                            {
                                "if": {
                                    "properties": {
                                        "filter": {
                                            "const": "delete"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.filter.delete"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "filter": {
                                            "const": "ip_mask"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.filter.ip_mask"
                                }
                            },
                            {
                                "properties": {
                                    "filter": {
                                        "description": "filter name\nstring\nModule: caddy.logging.encoders.filter\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#FilterEncoder",
                                        "type": "string",
                                        "enum": [
                                            "delete",
                                            "ip_mask"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                },
                "wrap": {
                    "description": "array\nModule: caddy.logging.encoders\n<hr>\n",
                    "type": "array",
                    "items": {
                        "required": [
                            "format"
                        ],
                        "allOf": [
                            {
                                "if": {
                                    "properties": {
                                        "format": {
                                            "const": "json"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.json"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "format": {
                                            "const": "logfmt"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.logfmt"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "format": {
                                            "const": "single_field"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.single_field"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "format": {
                                            "const": "console"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.console"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "format": {
                                            "const": "filter"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.filter"
                                }
                            },
                            {
                                "properties": {
                                    "format": {
                                        "description": "format name\nstring\nModule: caddy.logging.encoders\n<hr>\n",
                                        "type": "string",
                                        "enum": [
                                            "json",
                                            "logfmt",
                                            "single_field",
                                            "console",
                                            "filter"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        },
        "caddy.logging.encoders.filter.delete": {
            "description": "object\nModule: caddy.logging.encoders.filter.delete\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#DeleteFilter",
            "type": "object"
        },
        "caddy.logging.encoders.filter.ip_mask": {
            "description": "object\nModule: caddy.logging.encoders.filter.ip_mask\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#IPMaskFilter",
            "type": "object",
            "properties": {
                "ipv4_cidr": {
                    "description": "number\nModule: caddy.logging.encoders.filter.ip_mask\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#IPMaskFilter",
                    "type": "number"
                },
                "ipv6_cidr": {
                    "description": "number\nModule: caddy.logging.encoders.filter.ip_mask\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#IPMaskFilter",
                    "type": "number"
                }
            }
        },
        "caddy.logging.encoders.json": {
            "description": "object\nModule: caddy.logging.encoders.json\n<hr>\nJSONEncoder encodes entries as JSON.\n",
            "type": "object",
            "properties": {
                "caller_key": {
                    "description": "string\nModule: caddy.logging.encoders.json\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder",
                    "type": "string"
                },
                "duration_format": {
                    "description": "string\nModule: caddy.logging.encoders.json\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder",
                    "type": "string"
                },
                "level_format": {
                    "description": "string\nModule: caddy.logging.encoders.json\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder",
                    "type": "string"
                },
                "level_key": {
                    "description": "string\nModule: caddy.logging.encoders.json\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder",
                    "type": "string"
                },
                "line_ending": {
                    "description": "string\nModule: caddy.logging.encoders.json\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder",
                    "type": "string"
                },
                "message_key": {
                    "description": "string\nModule: caddy.logging.encoders.json\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder",
                    "type": "string"
                },
                "name_key": {
                    "description": "string\nModule: caddy.logging.encoders.json\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder",
                    "type": "string"
                },
                "stacktrace_key": {
                    "description": "string\nModule: caddy.logging.encoders.json\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder",
                    "type": "string"
                },
                "time_format": {
                    "description": "string\nModule: caddy.logging.encoders.json\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder",
                    "type": "string"
                },
                "time_key": {
                    "description": "string\nModule: caddy.logging.encoders.json\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder",
                    "type": "string"
                }
            }
        },
        "caddy.logging.encoders.logfmt": {
            "description": "object\nModule: caddy.logging.encoders.logfmt\n<hr>\nLogfmtEncoder encodes log entries as logfmt:\nhttps://www.brandur.org/logfmt\n",
            "type": "object",
            "properties": {
                "caller_key": {
                    "description": "string\nModule: caddy.logging.encoders.logfmt\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder",
                    "type": "string"
                },
                "duration_format": {
                    "description": "string\nModule: caddy.logging.encoders.logfmt\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder",
                    "type": "string"
                },
                "level_format": {
                    "description": "string\nModule: caddy.logging.encoders.logfmt\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder",
                    "type": "string"
                },
                "level_key": {
                    "description": "string\nModule: caddy.logging.encoders.logfmt\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder",
                    "type": "string"
                },
                "line_ending": {
                    "description": "string\nModule: caddy.logging.encoders.logfmt\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder",
                    "type": "string"
                },
                "message_key": {
                    "description": "string\nModule: caddy.logging.encoders.logfmt\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder",
                    "type": "string"
                },
                "name_key": {
                    "description": "string\nModule: caddy.logging.encoders.logfmt\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder",
                    "type": "string"
                },
                "stacktrace_key": {
                    "description": "string\nModule: caddy.logging.encoders.logfmt\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder",
                    "type": "string"
                },
                "time_format": {
                    "description": "string\nModule: caddy.logging.encoders.logfmt\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder",
                    "type": "string"
                },
                "time_key": {
                    "description": "string\nModule: caddy.logging.encoders.logfmt\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder",
                    "type": "string"
                }
            }
        },
        "caddy.logging.encoders.single_field": {
            "description": "object\nModule: caddy.logging.encoders.single_field\n<hr>\nSingleFieldEncoder writes a log entry that consists entirely\nof a single string field in the log entry. This is useful\nfor custom, self-encoded log entries that consist of a\nsingle field in the structured log entry.\n",
            "type": "object",
            "properties": {
                "fallback": {
                    "description": "array\nModule: caddy.logging.encoders\n<hr>\n",
                    "type": "array",
                    "items": {
                        "required": [
                            "format"
                        ],
                        "allOf": [
                            {
                                "if": {
                                    "properties": {
                                        "format": {
                                            "const": "console"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.console"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "format": {
                                            "const": "filter"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.filter"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "format": {
                                            "const": "json"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.json"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "format": {
                                            "const": "logfmt"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.logfmt"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "format": {
                                            "const": "single_field"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.single_field"
                                }
                            },
                            {
                                "properties": {
                                    "format": {
                                        "description": "format name\nstring\nModule: caddy.logging.encoders\n<hr>\n",
                                        "type": "string",
                                        "enum": [
                                            "console",
                                            "filter",
                                            "json",
                                            "logfmt",
                                            "single_field"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                },
                "field": {
                    "description": "string\nModule: caddy.logging.encoders.single_field\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#SingleFieldEncoder",
                    "type": "string"
                }
            }
        },
        "caddy.logging.writers.discard": {
            "description": "object\nModule: caddy.logging.writers.discard\n<hr>\nDiscardWriter discards all writes.\n",
            "type": "object"
        },
        "caddy.logging.writers.file": {
            "description": "object\nModule: caddy.logging.writers.file\n<hr>\nFileWriter can write logs to files. By default, log files\nare rotated (\"rolled\") when they get large, and old log\nfiles get deleted, to ensure that the process does not\nexhaust disk space.\n",
            "type": "object",
            "properties": {
                "filename": {
                    "description": "string\nModule: caddy.logging.writers.file\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#FileWriter",
                    "type": "string"
                },
                "roll": {
                    "description": "boolean\nModule: caddy.logging.writers.file\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#FileWriter",
                    "type": "boolean"
                },
                "roll_gzip": {
                    "description": "boolean\nModule: caddy.logging.writers.file\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#FileWriter",
                    "type": "boolean"
                },
                "roll_keep": {
                    "description": "number\nModule: caddy.logging.writers.file\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#FileWriter",
                    "type": "number"
                },
                "roll_keep_days": {
                    "description": "number\nModule: caddy.logging.writers.file\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#FileWriter",
                    "type": "number"
                },
                "roll_local_time": {
                    "description": "boolean\nModule: caddy.logging.writers.file\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#FileWriter",
                    "type": "boolean"
                },
                "roll_size_mb": {
                    "description": "number\nModule: caddy.logging.writers.file\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#FileWriter",
                    "type": "number"
                }
            }
        },
        "caddy.logging.writers.net": {
            "description": "object\nModule: caddy.logging.writers.net\n<hr>\nNetWriter implements a log writer that outputs to a network socket.\n",
            "type": "object",
            "properties": {
                "address": {
                    "description": "string\nModule: caddy.logging.writers.net\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#NetWriter",
                    "type": "string"
                }
            }
        },
        "caddy.logging.writers.stderr": {
            "description": "object\nModule: caddy.logging.writers.stderr\n<hr>\nStderrWriter writes logs to standard error.\n",
            "type": "object"
        },
        "caddy.logging.writers.stdout": {
            "description": "object\nModule: caddy.logging.writers.stdout\n<hr>\nStdoutWriter writes logs to standard out.\n",
            "type": "object"
        },
        "caddy.storage.file_system": {
            "description": "object\nModule: caddy.storage.file_system\n<hr>\nFileStorage is a certmagic.Storage wrapper for certmagic.FileStorage.\n",
            "type": "object",
            "properties": {
                "root": {
                    "description": "string\nModule: caddy.storage.file_system\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/filestorage#FileStorage",
                    "type": "string"
                }
            }
        },
        "exec": {
            "description": "object\nModule: exec\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-exec#App",
            "type": "object",
            "properties": {
                "commands": {
                    "description": "array\nModule: exec\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-exec#App",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "args": {
                                "description": "array\nModule: exec\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-exec#App",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "at": {
                                "description": "array\nModule: exec\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-exec#App",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "command": {
                                "description": "string\nModule: exec\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-exec#App",
                                "type": "string"
                            },
                            "directory": {
                                "description": "string\nModule: exec\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-exec#App",
                                "type": "string"
                            },
                            "foreground": {
                                "description": "boolean\nModule: exec\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-exec#App",
                                "type": "boolean"
                            },
                            "timeout": {
                                "description": "string\nModule: exec\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-exec#App",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "http": {
            "description": "object\nModule: http\n<hr>\nApp is a robust, production-ready HTTP server.\n\nHTTPS is enabled by default if host matchers with qualifying names are used\nin any of routes; certificates are automatically provisioned and renewed.\nAdditionally, automatic HTTPS will also enable HTTPS for servers that listen\nonly on the HTTPS port but which do not have any TLS connection policies\ndefined by adding a good, default TLS connection policy.\n\nIn HTTP routes, additional placeholders are available (replace any `*`):\n\nPlaceholder | Description\n------------|---------------\n`{http.request.cookie.*}` | HTTP request cookie\n`{http.request.header.*}` | Specific request header field\n`{http.request.host.labels.*}` | Request host labels (0-based from right); e.g. for foo.example.com: 0=com, 1=example, 2=foo\n`{http.request.host}` | The host part of the request's Host header\n`{http.request.hostport}` | The host and port from the request's Host header\n`{http.request.method}` | The request method\n`{http.request.orig_method}` | The request's original method\n`{http.request.orig_uri.path.dir}` | The request's original directory\n`{http.request.orig_uri.path.file}` | The request's original filename\n`{http.request.orig_uri.path}` | The request's original path\n`{http.request.orig_uri.query}` | The request's original query string (without `?`)\n`{http.request.orig_uri}` | The request's original URI\n`{http.request.port}` | The port part of the request's Host header\n`{http.request.proto}` | The protocol of the request\n`{http.request.remote.host}` | The host part of the remote client's address\n`{http.request.remote.port}` | The port part of the remote client's address\n`{http.request.remote}` | The address of the remote client\n`{http.request.scheme}` | The request scheme\n`{http.request.tls.version}` | The TLS version name\n`{http.request.tls.cipher_suite}` | The TLS cipher suite\n`{http.request.tls.resumed}` | The TLS connection resumed a previous connection\n`{http.request.tls.proto}` | The negotiated next protocol\n`{http.request.tls.proto_mutual}` | The negotiated next protocol was advertised by the server\n`{http.request.tls.server_name}` | The server name requested by the client, if any\n`{http.request.tls.client.fingerprint}` | The SHA256 checksum of the client certificate\n`{http.request.tls.client.issuer}` | The issuer DN of the client certificate\n`{http.request.tls.client.serial}` | The serial number of the client certificate\n`{http.request.tls.client.subject}` | The subject DN of the client certificate\n`{http.request.uri.path.*}` | Parts of the path, split by `/` (0-based from left)\n`{http.request.uri.path.dir}` | The directory, excluding leaf filename\n`{http.request.uri.path.file}` | The filename of the path, excluding directory\n`{http.request.uri.path}` | The path component of the request URI\n`{http.request.uri.query.*}` | Individual query string value\n`{http.request.uri.query}` | The query string (without `?`)\n`{http.request.uri}` | The full request URI\n`{http.response.header.*}` | Specific response header field\n`{http.vars.*}` | Custom variables in the HTTP handler chain\n",
            "type": "object",
            "properties": {
                "grace_period": {
                    "description": "number\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                    "type": "number"
                },
                "http_port": {
                    "description": "number\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                    "type": "number"
                },
                "https_port": {
                    "description": "number\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                    "type": "number"
                },
                "servers": {
                    "description": "object\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                    "type": "object",
                    "additionalProperties": {
                        "properties": {
                            "automatic_https": {
                                "description": "object\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                "type": "object",
                                "properties": {
                                    "disable": {
                                        "description": "boolean\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                        "type": "boolean"
                                    },
                                    "disable_redirects": {
                                        "description": "boolean\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                        "type": "boolean"
                                    },
                                    "ignore_loaded_certificates": {
                                        "description": "boolean\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                        "type": "boolean"
                                    },
                                    "skip": {
                                        "description": "array\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "skip_certificates": {
                                        "description": "array\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "errors": {
                                "description": "object\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                "type": "object",
                                "properties": {
                                    "routes": {
                                        "description": "array\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "group": {
                                                    "description": "string\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                                    "type": "string"
                                                },
                                                "handle": {
                                                    "description": "array\nModule: http.handlers\n<hr>\n",
                                                    "type": "array",
                                                    "items": {
                                                        "required": [
                                                            "handler"
                                                        ],
                                                        "allOf": [
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "templates"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.templates"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "authentication"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.authentication"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "file_server"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.file_server"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "reverse_proxy"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.reverse_proxy"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "subroute"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.subroute"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "encode"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.encode"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "hmac"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.hmac"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "static_response"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.static_response"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "visitor_ip"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.visitor_ip"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "error"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.error"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "json_parse"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.json_parse"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "rewrite"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.rewrite"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "vars"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.vars"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "exec"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.exec"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "headers"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.headers"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "request_body"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.request_body"
                                                                }
                                                            },
                                                            {
                                                                "properties": {
                                                                    "handler": {
                                                                        "description": "handler name\nstring\nModule: http.handlers\n<hr>\n",
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "templates",
                                                                            "authentication",
                                                                            "file_server",
                                                                            "reverse_proxy",
                                                                            "subroute",
                                                                            "encode",
                                                                            "hmac",
                                                                            "static_response",
                                                                            "visitor_ip",
                                                                            "error",
                                                                            "json_parse",
                                                                            "rewrite",
                                                                            "vars",
                                                                            "exec",
                                                                            "headers",
                                                                            "request_body"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                "match": {
                                                    "description": "array\nModule: http.matchers\n<hr>\n",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "execnopmatch": {
                                                                "$ref": "#/definitions/http.matchers.execnopmatch"
                                                            },
                                                            "expression": {
                                                                "$ref": "#/definitions/http.matchers.expression"
                                                            },
                                                            "file": {
                                                                "$ref": "#/definitions/http.matchers.file"
                                                            },
                                                            "header": {
                                                                "$ref": "#/definitions/http.matchers.header"
                                                            },
                                                            "header_regexp": {
                                                                "$ref": "#/definitions/http.matchers.header_regexp"
                                                            },
                                                            "host": {
                                                                "$ref": "#/definitions/http.matchers.host"
                                                            },
                                                            "method": {
                                                                "$ref": "#/definitions/http.matchers.method"
                                                            },
                                                            "not": {
                                                                "$ref": "#/definitions/http.matchers.not"
                                                            },
                                                            "path": {
                                                                "$ref": "#/definitions/http.matchers.path"
                                                            },
                                                            "path_regexp": {
                                                                "$ref": "#/definitions/http.matchers.path_regexp"
                                                            },
                                                            "protocol": {
                                                                "$ref": "#/definitions/http.matchers.protocol"
                                                            },
                                                            "query": {
                                                                "$ref": "#/definitions/http.matchers.query"
                                                            },
                                                            "remote_ip": {
                                                                "$ref": "#/definitions/http.matchers.remote_ip"
                                                            },
                                                            "vars": {
                                                                "$ref": "#/definitions/http.matchers.vars"
                                                            },
                                                            "vars_regexp": {
                                                                "$ref": "#/definitions/http.matchers.vars_regexp"
                                                            }
                                                        }
                                                    }
                                                },
                                                "terminal": {
                                                    "description": "boolean\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "experimental_http3": {
                                "description": "boolean\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                "type": "boolean"
                            },
                            "idle_timeout": {
                                "description": "number\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                "type": "number"
                            },
                            "listen": {
                                "description": "array\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "listener_wrappers": {
                                "description": "array\nModule: caddy.listeners\n<hr>\n",
                                "type": "array",
                                "items": {
                                    "required": [
                                        "wrapper"
                                    ],
                                    "allOf": [
                                        {
                                            "if": {
                                                "properties": {
                                                    "wrapper": {
                                                        "const": "tls"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/caddy.listeners.tls"
                                            }
                                        },
                                        {
                                            "properties": {
                                                "wrapper": {
                                                    "description": "wrapper name\nstring\nModule: caddy.listeners\n<hr>\n",
                                                    "type": "string",
                                                    "enum": [
                                                        "tls"
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            "logs": {
                                "description": "object\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                "type": "object",
                                "properties": {
                                    "default_logger_name": {
                                        "description": "string\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                        "type": "string"
                                    },
                                    "logger_names": {
                                        "description": "object\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                        "type": "object",
                                        "additionalProperties": {}
                                    },
                                    "skip_hosts": {
                                        "description": "array\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "skip_unmapped_hosts": {
                                        "description": "boolean\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                        "type": "boolean"
                                    }
                                }
                            },
                            "max_header_bytes": {
                                "description": "number\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                "type": "number"
                            },
                            "read_header_timeout": {
                                "description": "number\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                "type": "number"
                            },
                            "read_timeout": {
                                "description": "number\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                "type": "number"
                            },
                            "routes": {
                                "description": "array\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "group": {
                                            "description": "string\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                            "type": "string"
                                        },
                                        "handle": {
                                            "description": "array\nModule: http.handlers\n<hr>\n",
                                            "type": "array",
                                            "items": {
                                                "required": [
                                                    "handler"
                                                ],
                                                "allOf": [
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "encode"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.encode"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "hmac"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.hmac"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "static_response"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.static_response"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "error"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.error"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "json_parse"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.json_parse"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "rewrite"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.rewrite"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "vars"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.vars"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "visitor_ip"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.visitor_ip"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "exec"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.exec"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "headers"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.headers"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "request_body"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.request_body"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "authentication"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.authentication"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "file_server"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.file_server"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "reverse_proxy"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.reverse_proxy"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "subroute"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.subroute"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "templates"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.templates"
                                                        }
                                                    },
                                                    {
                                                        "properties": {
                                                            "handler": {
                                                                "description": "handler name\nstring\nModule: http.handlers\n<hr>\n",
                                                                "type": "string",
                                                                "enum": [
                                                                    "encode",
                                                                    "hmac",
                                                                    "static_response",
                                                                    "error",
                                                                    "json_parse",
                                                                    "rewrite",
                                                                    "vars",
                                                                    "visitor_ip",
                                                                    "exec",
                                                                    "headers",
                                                                    "request_body",
                                                                    "authentication",
                                                                    "file_server",
                                                                    "reverse_proxy",
                                                                    "subroute",
                                                                    "templates"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        "match": {
                                            "description": "array\nModule: http.matchers\n<hr>\n",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "execnopmatch": {
                                                        "$ref": "#/definitions/http.matchers.execnopmatch"
                                                    },
                                                    "expression": {
                                                        "$ref": "#/definitions/http.matchers.expression"
                                                    },
                                                    "file": {
                                                        "$ref": "#/definitions/http.matchers.file"
                                                    },
                                                    "header": {
                                                        "$ref": "#/definitions/http.matchers.header"
                                                    },
                                                    "header_regexp": {
                                                        "$ref": "#/definitions/http.matchers.header_regexp"
                                                    },
                                                    "host": {
                                                        "$ref": "#/definitions/http.matchers.host"
                                                    },
                                                    "method": {
                                                        "$ref": "#/definitions/http.matchers.method"
                                                    },
                                                    "not": {
                                                        "$ref": "#/definitions/http.matchers.not"
                                                    },
                                                    "path": {
                                                        "$ref": "#/definitions/http.matchers.path"
                                                    },
                                                    "path_regexp": {
                                                        "$ref": "#/definitions/http.matchers.path_regexp"
                                                    },
                                                    "protocol": {
                                                        "$ref": "#/definitions/http.matchers.protocol"
                                                    },
                                                    "query": {
                                                        "$ref": "#/definitions/http.matchers.query"
                                                    },
                                                    "remote_ip": {
                                                        "$ref": "#/definitions/http.matchers.remote_ip"
                                                    },
                                                    "vars": {
                                                        "$ref": "#/definitions/http.matchers.vars"
                                                    },
                                                    "vars_regexp": {
                                                        "$ref": "#/definitions/http.matchers.vars_regexp"
                                                    }
                                                }
                                            }
                                        },
                                        "terminal": {
                                            "description": "boolean\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                            "type": "boolean"
                                        }
                                    }
                                }
                            },
                            "strict_sni_host": {
                                "description": "boolean\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                "type": "boolean"
                            },
                            "tls_connection_policies": {
                                "description": "array\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "alpn": {
                                            "description": "array\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "certificate_selection": {
                                            "description": "object\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                            "type": "object",
                                            "properties": {
                                                "all_tags": {
                                                    "description": "array\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "any_tag": {
                                                    "description": "array\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "public_key_algorithm": {
                                                    "description": "number\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                                    "type": "number"
                                                },
                                                "serial_number": {
                                                    "description": "array\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "subject_organization": {
                                                    "description": "array\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "cipher_suites": {
                                            "description": "array\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "client_authentication": {
                                            "description": "object\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                            "type": "object",
                                            "properties": {
                                                "mode": {
                                                    "description": "string\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                                    "type": "string"
                                                },
                                                "trusted_ca_certs": {
                                                    "description": "array\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "trusted_leaf_certs": {
                                                    "description": "array\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "curves": {
                                            "description": "array\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "default_sni": {
                                            "description": "string\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                            "type": "string"
                                        },
                                        "match": {
                                            "description": "array\nModule: tls.handshake_match\n<hr>\n",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "sni": {
                                                        "$ref": "#/definitions/tls.handshake_match.sni"
                                                    }
                                                }
                                            }
                                        },
                                        "protocol_max": {
                                            "description": "string\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                            "type": "string"
                                        },
                                        "protocol_min": {
                                            "description": "string\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "write_timeout": {
                                "description": "number\nModule: http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App",
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        "http.authentication.hashes.bcrypt": {
            "description": "object\nModule: http.authentication.hashes.bcrypt\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#BcryptHash",
            "type": "object"
        },
        "http.authentication.hashes.scrypt": {
            "description": "object\nModule: http.authentication.hashes.scrypt\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#ScryptHash",
            "type": "object",
            "properties": {
                "N": {
                    "description": "number\nModule: http.authentication.hashes.scrypt\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#ScryptHash",
                    "type": "number"
                },
                "key_length": {
                    "description": "number\nModule: http.authentication.hashes.scrypt\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#ScryptHash",
                    "type": "number"
                },
                "p": {
                    "description": "number\nModule: http.authentication.hashes.scrypt\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#ScryptHash",
                    "type": "number"
                },
                "r": {
                    "description": "number\nModule: http.authentication.hashes.scrypt\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#ScryptHash",
                    "type": "number"
                }
            }
        },
        "http.authentication.providers.http_basic": {
            "description": "object\nModule: http.authentication.providers.http_basic\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#HTTPBasicAuth",
            "type": "object",
            "properties": {
                "accounts": {
                    "description": "array\nModule: http.authentication.providers.http_basic\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#HTTPBasicAuth",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "password": {
                                "description": "string\nModule: http.authentication.providers.http_basic\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#HTTPBasicAuth",
                                "type": "string"
                            },
                            "salt": {
                                "description": "string\nModule: http.authentication.providers.http_basic\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#HTTPBasicAuth",
                                "type": "string"
                            },
                            "username": {
                                "description": "string\nModule: http.authentication.providers.http_basic\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#HTTPBasicAuth",
                                "type": "string"
                            }
                        }
                    }
                },
                "hash": {
                    "description": "array\nModule: http.authentication.hashes\n<hr>\n",
                    "type": "array",
                    "items": {
                        "required": [
                            "algorithm"
                        ],
                        "allOf": [
                            {
                                "if": {
                                    "properties": {
                                        "algorithm": {
                                            "const": "bcrypt"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/http.authentication.hashes.bcrypt"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "algorithm": {
                                            "const": "scrypt"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/http.authentication.hashes.scrypt"
                                }
                            },
                            {
                                "properties": {
                                    "algorithm": {
                                        "description": "algorithm name\nstring\nModule: http.authentication.hashes\n<hr>\n",
                                        "type": "string",
                                        "enum": [
                                            "bcrypt",
                                            "scrypt"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                },
                "realm": {
                    "description": "string\nModule: http.authentication.providers.http_basic\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#HTTPBasicAuth",
                    "type": "string"
                }
            }
        },
        "http.encoders.gzip": {
            "description": "object\nModule: http.encoders.gzip\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/encode/gzip#Gzip",
            "type": "object",
            "properties": {
                "level": {
                    "description": "number\nModule: http.encoders.gzip\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/encode/gzip#Gzip",
                    "type": "number"
                }
            }
        },
        "http.encoders.zstd": {
            "description": "object\nModule: http.encoders.zstd\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/encode/zstd#Zstd",
            "type": "object"
        },
        "http.handlers.authentication": {
            "description": "object\nModule: http.handlers.authentication\n<hr>\nAuthentication is a middleware which provides user authentication.\nRejects requests with HTTP 401 if the request is not authenticated.\n\nIts API is still experimental and may be subject to change.\n",
            "type": "object",
            "properties": {
                "providers": {
                    "description": "array\nModule: http.authentication.providers\n<hr>\n",
                    "type": "array",
                    "items": {
                        "properties": {
                            "http_basic": {
                                "$ref": "#/definitions/http.authentication.providers.http_basic"
                            }
                        }
                    }
                }
            }
        },
        "http.handlers.encode": {
            "description": "object\nModule: http.handlers.encode\n<hr>\nEncode is a middleware which can encode responses.\n",
            "type": "object",
            "properties": {
                "encodings": {
                    "description": "array\nModule: http.encoders\n<hr>\n",
                    "type": "array",
                    "items": {
                        "properties": {
                            "gzip": {
                                "$ref": "#/definitions/http.encoders.gzip"
                            },
                            "zstd": {
                                "$ref": "#/definitions/http.encoders.zstd"
                            }
                        }
                    }
                },
                "minimum_length": {
                    "description": "number\nModule: http.handlers.encode\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/encode#Encode",
                    "type": "number"
                }
            }
        },
        "http.handlers.error": {
            "description": "object\nModule: http.handlers.error\n<hr>\nStaticError implements a simple handler that returns an error.\nThis handler returns an error value, but does not write a response.\nThis is useful when you want the server to act as if an error\noccurred; for example, to invoke your custom error handling logic.\n\nSince this handler does not write a response, the error information\nis for use by the server to know how to handle the error.\n",
            "type": "object",
            "properties": {
                "error": {
                    "description": "string\nModule: http.handlers.error\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#StaticError",
                    "type": "string"
                },
                "status_code": {
                    "description": "string\nModule: http.handlers.error\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#StaticError",
                    "type": "string"
                }
            }
        },
        "http.handlers.exec": {
            "description": "object\nModule: http.handlers.exec\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-exec#Middleware",
            "type": "object",
            "properties": {
                "args": {
                    "description": "array\nModule: http.handlers.exec\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-exec#Middleware",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "at": {
                    "description": "array\nModule: http.handlers.exec\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-exec#Middleware",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "command": {
                    "description": "string\nModule: http.handlers.exec\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-exec#Middleware",
                    "type": "string"
                },
                "directory": {
                    "description": "string\nModule: http.handlers.exec\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-exec#Middleware",
                    "type": "string"
                },
                "foreground": {
                    "description": "boolean\nModule: http.handlers.exec\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-exec#Middleware",
                    "type": "boolean"
                },
                "timeout": {
                    "description": "string\nModule: http.handlers.exec\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-exec#Middleware",
                    "type": "string"
                }
            }
        },
        "http.handlers.file_server": {
            "description": "object\nModule: http.handlers.file_server\n<hr>\nFileServer implements a static file server responder for Caddy.\n",
            "type": "object",
            "properties": {
                "browse": {
                    "description": "object\nModule: http.handlers.file_server\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#FileServer",
                    "type": "object",
                    "properties": {
                        "template_file": {
                            "description": "string\nModule: http.handlers.file_server\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#FileServer",
                            "type": "string"
                        }
                    }
                },
                "canonical_uris": {
                    "description": "boolean\nModule: http.handlers.file_server\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#FileServer",
                    "type": "boolean"
                },
                "hide": {
                    "description": "array\nModule: http.handlers.file_server\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#FileServer",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "index_names": {
                    "description": "array\nModule: http.handlers.file_server\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#FileServer",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pass_thru": {
                    "description": "boolean\nModule: http.handlers.file_server\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#FileServer",
                    "type": "boolean"
                },
                "root": {
                    "description": "string\nModule: http.handlers.file_server\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#FileServer",
                    "type": "string"
                }
            }
        },
        "http.handlers.headers": {
            "description": "object\nModule: http.handlers.headers\n<hr>\nHandler is a middleware which modifies request and response headers.\n\nChanges to headers are applied immediately, except for the response\nheaders when Deferred is true or when Required is set. In those cases,\nthe changes are applied when the headers are written to the response.\nNote that deferred changes do not take effect if an error occurs later\nin the middleware chain.\n\nProperties in this module accept placeholders.\n\nResponse header operations can be conditioned upon response status code\nand/or other header values.\n",
            "type": "object",
            "properties": {
                "request": {
                    "description": "object\nModule: http.handlers.headers\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler",
                    "type": "object",
                    "properties": {
                        "add": {
                            "description": "object\nModule: http.handlers.headers\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler",
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "delete": {
                            "description": "array\nModule: http.handlers.headers\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "replace": {
                            "description": "object\nModule: http.handlers.headers\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler",
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "replace": {
                                            "description": "string\nModule: http.handlers.headers\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler",
                                            "type": "string"
                                        },
                                        "search": {
                                            "description": "string\nModule: http.handlers.headers\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler",
                                            "type": "string"
                                        },
                                        "search_regexp": {
                                            "description": "string\nModule: http.handlers.headers\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "set": {
                            "description": "object\nModule: http.handlers.headers\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler",
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "response": {
                    "description": "object\nModule: http.handlers.headers\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler",
                    "type": "object",
                    "properties": {
                        "add": {
                            "description": "object\nModule: http.handlers.headers\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler",
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "deferred": {
                            "description": "boolean\nModule: http.handlers.headers\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler",
                            "type": "boolean"
                        },
                        "delete": {
                            "description": "array\nModule: http.handlers.headers\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "replace": {
                            "description": "object\nModule: http.handlers.headers\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler",
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "replace": {
                                            "description": "string\nModule: http.handlers.headers\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler",
                                            "type": "string"
                                        },
                                        "search": {
                                            "description": "string\nModule: http.handlers.headers\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler",
                                            "type": "string"
                                        },
                                        "search_regexp": {
                                            "description": "string\nModule: http.handlers.headers\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "require": {
                            "description": "object\nModule: http.handlers.headers\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler",
                            "type": "object",
                            "properties": {
                                "headers": {
                                    "description": "object\nModule: http.handlers.headers\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "status_code": {
                                    "description": "array\nModule: http.handlers.headers\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler",
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    }
                                }
                            }
                        },
                        "set": {
                            "description": "object\nModule: http.handlers.headers\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler",
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "http.handlers.hmac": {
            "description": "object\nModule: http.handlers.hmac\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-hmac#HMAC",
            "type": "object",
            "properties": {
                "algorithm": {
                    "description": "string\nModule: http.handlers.hmac\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-hmac#HMAC",
                    "type": "string"
                },
                "name": {
                    "description": "string\nModule: http.handlers.hmac\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-hmac#HMAC",
                    "type": "string"
                },
                "secret": {
                    "description": "string\nModule: http.handlers.hmac\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-hmac#HMAC",
                    "type": "string"
                }
            }
        },
        "http.handlers.json_parse": {
            "description": "object\nModule: http.handlers.json_parse\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-json-parse#JSONParse",
            "type": "object",
            "properties": {
                "strict": {
                    "description": "boolean\nModule: http.handlers.json_parse\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-json-parse#JSONParse",
                    "type": "boolean"
                }
            }
        },
        "http.handlers.request_body": {
            "description": "object\nModule: http.handlers.request_body\n<hr>\nRequestBody is a middleware for manipulating the request body.\n",
            "type": "object",
            "properties": {
                "max_size": {
                    "description": "number\nModule: http.handlers.request_body\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/requestbody#RequestBody",
                    "type": "number"
                }
            }
        },
        "http.handlers.reverse_proxy": {
            "description": "object\nModule: http.handlers.reverse_proxy\n<hr>\nHandler implements a highly configurable and production-ready reverse proxy.\n\nUpon proxying, this module sets the following placeholders (which can be used\nboth within and after this handler):\n\nPlaceholder | Description\n------------|-------------\n`{http.reverse_proxy.upstream.address}` | The full address to the upstream as given in the config\n`{http.reverse_proxy.upstream.hostport}` | The host:port of the upstream\n`{http.reverse_proxy.upstream.host}` | The host of the upstream\n`{http.reverse_proxy.upstream.port}` | The port of the upstream\n`{http.reverse_proxy.upstream.requests}` | The approximate current number of requests to the upstream\n`{http.reverse_proxy.upstream.max_requests}` | The maximum approximate number of requests allowed to the upstream\n`{http.reverse_proxy.upstream.fails}` | The number of recent failed requests to the upstream\n",
            "type": "object",
            "properties": {
                "buffer_requests": {
                    "description": "boolean\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                    "type": "boolean"
                },
                "circuit_breaker": {
                    "description": "object\nModule: http.reverse_proxy.circuit_breakers\n<hr>\n",
                    "type": "object"
                },
                "flush_interval": {
                    "description": "number\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                    "type": "number"
                },
                "headers": {
                    "description": "object\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                    "type": "object",
                    "properties": {
                        "request": {
                            "description": "object\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                            "type": "object",
                            "properties": {
                                "add": {
                                    "description": "object\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "delete": {
                                    "description": "array\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "replace": {
                                    "description": "object\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "replace": {
                                                    "description": "string\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                                    "type": "string"
                                                },
                                                "search": {
                                                    "description": "string\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                                    "type": "string"
                                                },
                                                "search_regexp": {
                                                    "description": "string\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "set": {
                                    "description": "object\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "response": {
                            "description": "object\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                            "type": "object",
                            "properties": {
                                "add": {
                                    "description": "object\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "deferred": {
                                    "description": "boolean\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "boolean"
                                },
                                "delete": {
                                    "description": "array\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "replace": {
                                    "description": "object\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "replace": {
                                                    "description": "string\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                                    "type": "string"
                                                },
                                                "search": {
                                                    "description": "string\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                                    "type": "string"
                                                },
                                                "search_regexp": {
                                                    "description": "string\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "require": {
                                    "description": "object\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "object",
                                    "properties": {
                                        "headers": {
                                            "description": "object\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "status_code": {
                                            "description": "array\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                            "type": "array",
                                            "items": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                },
                                "set": {
                                    "description": "object\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "health_checks": {
                    "description": "object\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                    "type": "object",
                    "properties": {
                        "active": {
                            "description": "object\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                            "type": "object",
                            "properties": {
                                "expect_body": {
                                    "description": "string\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "string"
                                },
                                "expect_status": {
                                    "description": "number\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "number"
                                },
                                "headers": {
                                    "description": "object\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "interval": {
                                    "description": "number\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "number"
                                },
                                "max_size": {
                                    "description": "number\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "number"
                                },
                                "path": {
                                    "description": "string\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "string"
                                },
                                "port": {
                                    "description": "number\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "number"
                                },
                                "timeout": {
                                    "description": "number\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "number"
                                }
                            }
                        },
                        "passive": {
                            "description": "object\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                            "type": "object",
                            "properties": {
                                "fail_duration": {
                                    "description": "number\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "number"
                                },
                                "max_fails": {
                                    "description": "number\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "number"
                                },
                                "unhealthy_latency": {
                                    "description": "number\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "number"
                                },
                                "unhealthy_request_count": {
                                    "description": "number\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "number"
                                },
                                "unhealthy_status": {
                                    "description": "array\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                },
                "load_balancing": {
                    "description": "object\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                    "type": "object",
                    "properties": {
                        "retry_match": {
                            "description": "array\nModule: http.matchers\n<hr>\n",
                            "type": "array",
                            "items": {
                                "properties": {
                                    "execnopmatch": {
                                        "$ref": "#/definitions/http.matchers.execnopmatch"
                                    },
                                    "expression": {
                                        "$ref": "#/definitions/http.matchers.expression"
                                    },
                                    "file": {
                                        "$ref": "#/definitions/http.matchers.file"
                                    },
                                    "header": {
                                        "$ref": "#/definitions/http.matchers.header"
                                    },
                                    "header_regexp": {
                                        "$ref": "#/definitions/http.matchers.header_regexp"
                                    },
                                    "host": {
                                        "$ref": "#/definitions/http.matchers.host"
                                    },
                                    "method": {
                                        "$ref": "#/definitions/http.matchers.method"
                                    },
                                    "not": {
                                        "$ref": "#/definitions/http.matchers.not"
                                    },
                                    "path": {
                                        "$ref": "#/definitions/http.matchers.path"
                                    },
                                    "path_regexp": {
                                        "$ref": "#/definitions/http.matchers.path_regexp"
                                    },
                                    "protocol": {
                                        "$ref": "#/definitions/http.matchers.protocol"
                                    },
                                    "query": {
                                        "$ref": "#/definitions/http.matchers.query"
                                    },
                                    "remote_ip": {
                                        "$ref": "#/definitions/http.matchers.remote_ip"
                                    },
                                    "vars": {
                                        "$ref": "#/definitions/http.matchers.vars"
                                    },
                                    "vars_regexp": {
                                        "$ref": "#/definitions/http.matchers.vars_regexp"
                                    }
                                }
                            }
                        },
                        "selection_policy": {
                            "description": "array\nModule: http.reverse_proxy.selection_policies\n<hr>\n",
                            "type": "array",
                            "items": {
                                "required": [
                                    "policy"
                                ],
                                "allOf": [
                                    {
                                        "if": {
                                            "properties": {
                                                "policy": {
                                                    "const": "ip_hash"
                                                }
                                            }
                                        },
                                        "then": {
                                            "$ref": "#/definitions/http.reverse_proxy.selection_policies.ip_hash"
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "policy": {
                                                    "const": "least_conn"
                                                }
                                            }
                                        },
                                        "then": {
                                            "$ref": "#/definitions/http.reverse_proxy.selection_policies.least_conn"
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "policy": {
                                                    "const": "random"
                                                }
                                            }
                                        },
                                        "then": {
                                            "$ref": "#/definitions/http.reverse_proxy.selection_policies.random"
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "policy": {
                                                    "const": "random_choose"
                                                }
                                            }
                                        },
                                        "then": {
                                            "$ref": "#/definitions/http.reverse_proxy.selection_policies.random_choose"
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "policy": {
                                                    "const": "round_robin"
                                                }
                                            }
                                        },
                                        "then": {
                                            "$ref": "#/definitions/http.reverse_proxy.selection_policies.round_robin"
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "policy": {
                                                    "const": "uri_hash"
                                                }
                                            }
                                        },
                                        "then": {
                                            "$ref": "#/definitions/http.reverse_proxy.selection_policies.uri_hash"
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "policy": {
                                                    "const": "first"
                                                }
                                            }
                                        },
                                        "then": {
                                            "$ref": "#/definitions/http.reverse_proxy.selection_policies.first"
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "policy": {
                                                    "const": "header"
                                                }
                                            }
                                        },
                                        "then": {
                                            "$ref": "#/definitions/http.reverse_proxy.selection_policies.header"
                                        }
                                    },
                                    {
                                        "properties": {
                                            "policy": {
                                                "description": "policy name\nstring\nModule: http.reverse_proxy.selection_policies\n<hr>\n",
                                                "type": "string",
                                                "enum": [
                                                    "ip_hash",
                                                    "least_conn",
                                                    "random",
                                                    "random_choose",
                                                    "round_robin",
                                                    "uri_hash",
                                                    "first",
                                                    "header"
                                                ]
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        "try_duration": {
                            "description": "number\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                            "type": "number"
                        },
                        "try_interval": {
                            "description": "number\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                            "type": "number"
                        }
                    }
                },
                "transport": {
                    "description": "array\nModule: http.reverse_proxy.transport\n<hr>\n",
                    "type": "array",
                    "items": {
                        "required": [
                            "protocol"
                        ],
                        "allOf": [
                            {
                                "if": {
                                    "properties": {
                                        "protocol": {
                                            "const": "fastcgi"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/http.reverse_proxy.transport.fastcgi"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "protocol": {
                                            "const": "http"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/http.reverse_proxy.transport.http"
                                }
                            },
                            {
                                "properties": {
                                    "protocol": {
                                        "description": "protocol name\nstring\nModule: http.reverse_proxy.transport\n<hr>\n",
                                        "type": "string",
                                        "enum": [
                                            "fastcgi",
                                            "http"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                },
                "upstreams": {
                    "description": "array\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "dial": {
                                "description": "string\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                "type": "string"
                            },
                            "lookup_srv": {
                                "description": "string\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                "type": "string"
                            },
                            "max_requests": {
                                "description": "number\nModule: http.handlers.reverse_proxy\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler",
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        "http.handlers.rewrite": {
            "description": "object\nModule: http.handlers.rewrite\n<hr>\nRewrite is a middleware which can rewrite HTTP requests.\n\nThe Method and URI properties are \"setters\": the request URI\nwill be set to the given values. Other properties are \"modifiers\":\nthey modify existing files but do not explicitly specify what the\nresult will be. It is atypical to combine the use of setters and\nmodifiers in a single rewrite.\n",
            "type": "object",
            "properties": {
                "method": {
                    "description": "string\nModule: http.handlers.rewrite\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/rewrite#Rewrite",
                    "type": "string"
                },
                "strip_path_prefix": {
                    "description": "string\nModule: http.handlers.rewrite\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/rewrite#Rewrite",
                    "type": "string"
                },
                "strip_path_suffix": {
                    "description": "string\nModule: http.handlers.rewrite\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/rewrite#Rewrite",
                    "type": "string"
                },
                "uri": {
                    "description": "string\nModule: http.handlers.rewrite\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/rewrite#Rewrite",
                    "type": "string"
                },
                "uri_substring": {
                    "description": "array\nModule: http.handlers.rewrite\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/rewrite#Rewrite",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "find": {
                                "description": "string\nModule: http.handlers.rewrite\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/rewrite#Rewrite",
                                "type": "string"
                            },
                            "limit": {
                                "description": "number\nModule: http.handlers.rewrite\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/rewrite#Rewrite",
                                "type": "number"
                            },
                            "replace": {
                                "description": "string\nModule: http.handlers.rewrite\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/rewrite#Rewrite",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "http.handlers.static_response": {
            "description": "object\nModule: http.handlers.static_response\n<hr>\nStaticResponse implements a simple responder for static responses.\n",
            "type": "object",
            "properties": {
                "body": {
                    "description": "string\nModule: http.handlers.static_response\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#StaticResponse",
                    "type": "string"
                },
                "close": {
                    "description": "boolean\nModule: http.handlers.static_response\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#StaticResponse",
                    "type": "boolean"
                },
                "headers": {
                    "description": "object\nModule: http.handlers.static_response\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#StaticResponse",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "status_code": {
                    "description": "string\nModule: http.handlers.static_response\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#StaticResponse",
                    "type": "string"
                }
            }
        },
        "http.handlers.subroute": {
            "description": "object\nModule: http.handlers.subroute\n<hr>\nSubroute implements a handler that compiles and executes routes.\nThis is useful for a batch of routes that all inherit the same\nmatchers, or for multiple routes that should be treated as a\nsingle route.\n\nYou can also use subroutes to handle errors from its handlers.\nFirst the primary routes will be executed, and if they return an\nerror, the errors routes will be executed; in that case, an error\nis only returned to the entry point at the server if there is an\nadditional error returned from the errors routes.\n",
            "type": "object",
            "properties": {
                "errors": {
                    "description": "object\nModule: http.handlers.subroute\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#Subroute",
                    "type": "object",
                    "properties": {
                        "routes": {
                            "description": "array\nModule: http.handlers.subroute\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#Subroute",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "group": {
                                        "description": "string\nModule: http.handlers.subroute\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#Subroute",
                                        "type": "string"
                                    },
                                    "handle": {
                                        "description": "array\nModule: http.handlers\n<hr>\n",
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "handler"
                                            ],
                                            "allOf": [
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "error"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.error"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "json_parse"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.json_parse"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "rewrite"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.rewrite"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "vars"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.vars"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "visitor_ip"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.visitor_ip"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "exec"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.exec"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "headers"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.headers"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "request_body"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.request_body"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "authentication"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.authentication"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "file_server"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.file_server"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "reverse_proxy"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.reverse_proxy"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "subroute"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.subroute"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "templates"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.templates"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "encode"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.encode"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "hmac"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.hmac"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "static_response"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.static_response"
                                                    }
                                                },
                                                {
                                                    "properties": {
                                                        "handler": {
                                                            "description": "handler name\nstring\nModule: http.handlers\n<hr>\n",
                                                            "type": "string",
                                                            "enum": [
                                                                "error",
                                                                "json_parse",
                                                                "rewrite",
                                                                "vars",
                                                                "visitor_ip",
                                                                "exec",
                                                                "headers",
                                                                "request_body",
                                                                "authentication",
                                                                "file_server",
                                                                "reverse_proxy",
                                                                "subroute",
                                                                "templates",
                                                                "encode",
                                                                "hmac",
                                                                "static_response"
                                                            ]
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "match": {
                                        "description": "array\nModule: http.matchers\n<hr>\n",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "execnopmatch": {
                                                    "$ref": "#/definitions/http.matchers.execnopmatch"
                                                },
                                                "expression": {
                                                    "$ref": "#/definitions/http.matchers.expression"
                                                },
                                                "file": {
                                                    "$ref": "#/definitions/http.matchers.file"
                                                },
                                                "header": {
                                                    "$ref": "#/definitions/http.matchers.header"
                                                },
                                                "header_regexp": {
                                                    "$ref": "#/definitions/http.matchers.header_regexp"
                                                },
                                                "host": {
                                                    "$ref": "#/definitions/http.matchers.host"
                                                },
                                                "method": {
                                                    "$ref": "#/definitions/http.matchers.method"
                                                },
                                                "not": {
                                                    "$ref": "#/definitions/http.matchers.not"
                                                },
                                                "path": {
                                                    "$ref": "#/definitions/http.matchers.path"
                                                },
                                                "path_regexp": {
                                                    "$ref": "#/definitions/http.matchers.path_regexp"
                                                },
                                                "protocol": {
                                                    "$ref": "#/definitions/http.matchers.protocol"
                                                },
                                                "query": {
                                                    "$ref": "#/definitions/http.matchers.query"
                                                },
                                                "remote_ip": {
                                                    "$ref": "#/definitions/http.matchers.remote_ip"
                                                },
                                                "vars": {
                                                    "$ref": "#/definitions/http.matchers.vars"
                                                },
                                                "vars_regexp": {
                                                    "$ref": "#/definitions/http.matchers.vars_regexp"
                                                }
                                            }
                                        }
                                    },
                                    "terminal": {
                                        "description": "boolean\nModule: http.handlers.subroute\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#Subroute",
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "routes": {
                    "description": "array\nModule: http.handlers.subroute\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#Subroute",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "group": {
                                "description": "string\nModule: http.handlers.subroute\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#Subroute",
                                "type": "string"
                            },
                            "handle": {
                                "description": "array\nModule: http.handlers\n<hr>\n",
                                "type": "array",
                                "items": {
                                    "required": [
                                        "handler"
                                    ],
                                    "allOf": [
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "file_server"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.file_server"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "reverse_proxy"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.reverse_proxy"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "subroute"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.subroute"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "templates"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.templates"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "authentication"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.authentication"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "hmac"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.hmac"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "static_response"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.static_response"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "encode"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.encode"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "json_parse"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.json_parse"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "rewrite"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.rewrite"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "vars"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.vars"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "visitor_ip"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.visitor_ip"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "error"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.error"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "headers"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.headers"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "request_body"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.request_body"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "exec"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.exec"
                                            }
                                        },
                                        {
                                            "properties": {
                                                "handler": {
                                                    "description": "handler name\nstring\nModule: http.handlers\n<hr>\n",
                                                    "type": "string",
                                                    "enum": [
                                                        "file_server",
                                                        "reverse_proxy",
                                                        "subroute",
                                                        "templates",
                                                        "authentication",
                                                        "hmac",
                                                        "static_response",
                                                        "encode",
                                                        "json_parse",
                                                        "rewrite",
                                                        "vars",
                                                        "visitor_ip",
                                                        "error",
                                                        "headers",
                                                        "request_body",
                                                        "exec"
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            "match": {
                                "description": "array\nModule: http.matchers\n<hr>\n",
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "execnopmatch": {
                                            "$ref": "#/definitions/http.matchers.execnopmatch"
                                        },
                                        "expression": {
                                            "$ref": "#/definitions/http.matchers.expression"
                                        },
                                        "file": {
                                            "$ref": "#/definitions/http.matchers.file"
                                        },
                                        "header": {
                                            "$ref": "#/definitions/http.matchers.header"
                                        },
                                        "header_regexp": {
                                            "$ref": "#/definitions/http.matchers.header_regexp"
                                        },
                                        "host": {
                                            "$ref": "#/definitions/http.matchers.host"
                                        },
                                        "method": {
                                            "$ref": "#/definitions/http.matchers.method"
                                        },
                                        "not": {
                                            "$ref": "#/definitions/http.matchers.not"
                                        },
                                        "path": {
                                            "$ref": "#/definitions/http.matchers.path"
                                        },
                                        "path_regexp": {
                                            "$ref": "#/definitions/http.matchers.path_regexp"
                                        },
                                        "protocol": {
                                            "$ref": "#/definitions/http.matchers.protocol"
                                        },
                                        "query": {
                                            "$ref": "#/definitions/http.matchers.query"
                                        },
                                        "remote_ip": {
                                            "$ref": "#/definitions/http.matchers.remote_ip"
                                        },
                                        "vars": {
                                            "$ref": "#/definitions/http.matchers.vars"
                                        },
                                        "vars_regexp": {
                                            "$ref": "#/definitions/http.matchers.vars_regexp"
                                        }
                                    }
                                }
                            },
                            "terminal": {
                                "description": "boolean\nModule: http.handlers.subroute\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#Subroute",
                                "type": "boolean"
                            }
                        }
                    }
                }
            }
        },
        "http.handlers.templates": {
            "description": "object\nModule: http.handlers.templates\n<hr>\nTemplates is a middleware which executes response bodies as Go templates.\nThe syntax is documented in the Go standard library's\n[text/template package](https://golang.org/pkg/text/template/).\n\n⚠️ Template functions/actions are still experimental, so they are subject to change.\n\n[All Sprig functions](https://masterminds.github.io/sprig/) are supported.\n\nIn addition to the standard functions and Sprig functions, Caddy adds\nextra functions and data that are available to a template:\n\n##### `.Args`\n\nAccess arguments passed to this page/context, for example as the result of a `include`.\n\n```\n{{.Args 0}} // first argument\n```\n\n##### `.Cookie`\n\nGets the value of a cookie by name.\n\n```\n{{.Cookie \"cookiename\"}}\n```\n\n##### `env`\n\nGets an environment variable.\n\n```\n{{env \"VAR_NAME\"}}\n```\n\n##### `.Host`\n\nReturns the hostname portion (no port) of the Host header of the HTTP request.\n\n```\n{{.Host}}\n```\n\n##### `httpInclude`\n\nIncludes the contents of another file by making a virtual HTTP request (also known as a sub-request). The URI path must exist on the same virtual server because the request does not use sockets; instead, the request is crafted in memory and the handler is invoked directly for increased efficiency.\n\n```\n{{httpInclude \"/foo/bar?q=val\"}}\n```\n\n##### `include`\n\nIncludes the contents of another file. Optionally can pass key-value pairs as arguments to be accessed by the included file.\n\n```\n{{include \"path/to/file.html\"}}  // no arguments\n{{include \"path/to/file.html\" \"arg1\" 2 \"value 3\"}}  // with arguments\n```\n\n##### `listFiles`\n\nReturns a list of the files in the given directory, which is relative to the template context's file root.\n\n```\n{{listFiles \"/mydir\"}}\n```\n\n##### `markdown`\n\nRenders the given Markdown text as HTML.\n\n```\n{{markdown \"My _markdown_ text\"}}\n```\n\n##### `.RemoteIP`\n\nReturns the client's IP address.\n\n```\n{{.RemoteIP}}\n```\n\n##### `.Req`\n\nAccesses the current HTTP request, which has various fields, including:\n\n   - `.Method` - the method\n   - `.URL` - the URL, which in turn has component fields (Scheme, Host, Path, etc.)\n   - `.Header` - the header fields\n   - `.Host` - the Host or :authority header of the request\n\n```\n{{.Req.Header.Get \"User-Agent\"}}\n```\n\n##### `.RespHeader.Add`\n\nAdds a header field to the HTTP response.\n\n```\n{{.RespHeader.Add \"Field-Name\" \"val\"}}\n```\n\n##### `.RespHeader.Del`\n\nDeletes a header field on the HTTP response.\n\n```\n{{.RespHeader.Del \"Field-Name\"}}\n```\n\n##### `.RespHeader.Set`\n\nSets a header field on the HTTP response, replacing any existing value.\n\n```\n{{.RespHeader.Set \"Field-Name\" \"val\"}}\n```\n\n##### `splitFrontMatter`\n\nSplits front matter out from the body. Front matter is metadata that appears at the very beginning of a file or string. Front matter can be in YAML, TOML, or JSON formats:\n\n**TOML** front matter starts and ends with `+++`:\n\n```\n+++\ntemplate = \"blog\"\ntitle = \"Blog Homepage\"\nsitename = \"A Caddy site\"\n+++\n```\n\n**YAML** is surrounded by `---`:\n\n```\n---\ntemplate: blog\ntitle: Blog Homepage\nsitename: A Caddy site\n---\n```\n\n**JSON** is simply `{` and `}`:\n\n```\n{\n\t\"template\": \"blog\",\n\t\"title\": \"Blog Homepage\",\n\t\"sitename\": \"A Caddy site\"\n}\n```\n\nThe resulting front matter will be made available like so:\n\n- `.Meta` to access the metadata fields, for example: `{{$parsed.Meta.title}}`\n- `.Body` to access the body after the front matter, for example: `{{markdown $parsed.Body}}`\n\n##### `stripHTML`\n\nRemoves HTML from a string.\n\n```\n{{stripHTML \"Shows <b>only</b> text content\"}}\n```\n",
            "type": "object",
            "properties": {
                "delimiters": {
                    "description": "array\nModule: http.handlers.templates\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/templates#Templates",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "file_root": {
                    "description": "string\nModule: http.handlers.templates\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/templates#Templates",
                    "type": "string"
                },
                "mime_types": {
                    "description": "array\nModule: http.handlers.templates\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/templates#Templates",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "http.handlers.vars": {
            "description": "object\nModule: http.handlers.vars\n<hr>\nVarsMiddleware is an HTTP middleware which sets variables\nin the context, mainly for use by placeholders. The\nplaceholders have the form: `{http.vars.variable_name}`\n",
            "type": "object",
            "additionalProperties": {}
        },
        "http.handlers.visitor_ip": {
            "description": "object\nModule: http.handlers.visitor_ip\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-webhooks#Middleware",
            "type": "object",
            "properties": {
                "output": {
                    "description": "string\nModule: http.handlers.visitor_ip\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-webhooks#Middleware",
                    "type": "string"
                }
            }
        },
        "http.matchers.execnopmatch": {
            "description": "object\nModule: http.matchers.execnopmatch\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-exec#NopMatcher",
            "type": "object",
            "properties": {
                "label": {
                    "description": "string\nModule: http.matchers.execnopmatch\n<hr>\nhttps://pkg.go.dev/github.com/abiosoft/caddy-exec#NopMatcher",
                    "type": "string"
                }
            }
        },
        "http.matchers.expression": {
            "description": "object\nModule: http.matchers.expression\n<hr>\nMatchExpression matches requests by evaluating a\n[CEL](https://github.com/google/cel-spec) expression.\nThis enables complex logic to be expressed using a comfortable,\nfamiliar syntax.\n\nThis matcher's JSON interface is actually a string, not a struct.\nThe generated docs are not correct because this type has custom\nmarshaling logic.\n\nCOMPATIBILITY NOTE: This module is still experimental and is not\nsubject to Caddy's compatibility guarantee.\n",
            "type": "object"
        },
        "http.matchers.file": {
            "description": "object\nModule: http.matchers.file\n<hr>\nMatchFile is an HTTP request matcher that can match\nrequests based upon file existence.\n\nUpon matching, two new placeholders will be made\navailable:\n\n- `{http.matchers.file.relative}` The root-relative\npath of the file. This is often useful when rewriting\nrequests.\n- `{http.matchers.file.absolute}` The absolute path\nof the matched file.\n",
            "type": "object",
            "properties": {
                "root": {
                    "description": "string\nModule: http.matchers.file\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#MatchFile",
                    "type": "string"
                },
                "split_path": {
                    "description": "array\nModule: http.matchers.file\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#MatchFile",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "try_files": {
                    "description": "array\nModule: http.matchers.file\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#MatchFile",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "try_policy": {
                    "description": "string\nModule: http.matchers.file\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#MatchFile",
                    "type": "string"
                }
            }
        },
        "http.matchers.header": {
            "description": "object\nModule: http.matchers.header\n<hr>\nMatchHeader matches requests by header fields. It performs fast,\nexact string comparisons of the field values. Fast prefix, suffix,\nand substring matches can also be done by suffixing, prefixing, or\nsurrounding the value with the wildcard `*` character, respectively.\nIf a list is null, the header must not exist. If the list is empty,\nthe field must simply exist, regardless of its value.\n",
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "http.matchers.header_regexp": {
            "description": "object\nModule: http.matchers.header_regexp\n<hr>\nMatchHeaderRE matches requests by a regular expression on header fields.\n\nUpon a match, it adds placeholders to the request: `{http.regexp.name.capture_group}`\nwhere `name` is the regular expression's name, and `capture_group` is either\nthe named or positional capture group from the expression itself. If no name\nis given, then the placeholder omits the name: `{http.regexp.capture_group}`\n(potentially leading to collisions).\n",
            "type": "object",
            "additionalProperties": {
                "properties": {
                    "name": {
                        "description": "string\nModule: http.matchers.header_regexp\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchHeaderRE",
                        "type": "string"
                    },
                    "pattern": {
                        "description": "string\nModule: http.matchers.header_regexp\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchHeaderRE",
                        "type": "string"
                    }
                }
            }
        },
        "http.matchers.host": {
            "description": "array\nModule: http.matchers.host\n<hr>\nMatchHost matches requests by the Host value (case-insensitive).\n\nWhen used in a top-level HTTP route,\n[qualifying domain names](/docs/automatic-https#hostname-requirements)\nmay trigger [automatic HTTPS](/docs/automatic-https), which automatically\nprovisions and renews certificates for you. Before doing this, you\nshould ensure that DNS records for these domains are properly configured,\nespecially A/AAAA pointed at your server.\n\nAutomatic HTTPS can be\n[customized or disabled](/docs/modules/http#servers/automatic_https).\n\nWildcards (`*`) may be used to represent exactly one label of the\nhostname, in accordance with RFC 1034 (because host matchers are also\nused for automatic HTTPS which influences TLS certificates). Thus,\na host of `*` matches hosts like `localhost` or `internal` but not\n`example.com`. To catch all hosts, omit the host matcher entirely.\n\nThe wildcard can be useful for matching all subdomains, for example:\n`*.example.com` matches `foo.example.com` but not `foo.bar.example.com`.\n",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "http.matchers.method": {
            "description": "array\nModule: http.matchers.method\n<hr>\nMatchMethod matches requests by the method.\n",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "http.matchers.not": {
            "description": "object\nModule: http.matchers.not\n<hr>\nMatchNot matches requests by negating the results of its matcher\nsets. A single \"not\" matcher takes one or more matcher sets. Each\nmatcher set is OR'ed; in other words, if any matcher set returns\ntrue, the final result of the \"not\" matcher is false. Individual\nmatchers within a set work the same (i.e. different matchers in\nthe same set are AND'ed).\n\nNote that the generated docs which describe the structure of\nthis module are wrong because of how this type unmarshals JSON\nin a custom way. The correct structure is:\n\n```json\n[\n\t{},\n\t{}\n]\n```\n\nwhere each of the array elements is a matcher set, i.e. an\nobject keyed by matcher name.\n",
            "type": "object"
        },
        "http.matchers.path": {
            "description": "array\nModule: http.matchers.path\n<hr>\nMatchPath matches requests by the URI's path (case-insensitive). Path\nmatches are exact, but wildcards may be used:\n\n- At the end, for a prefix match (`/prefix/*`)\n- At the beginning, for a suffix match (`*.suffix`)\n- On both sides, for a substring match (`*/contains/*`)\n- In the middle, for a globular match (`/accounts/*/info`)\n\nThis matcher is fast, so it does not support regular expressions or\ncapture groups. For slower but more powerful matching, use the\npath_regexp matcher.\n",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "http.matchers.path_regexp": {
            "description": "object\nModule: http.matchers.path_regexp\n<hr>\nMatchPathRE matches requests by a regular expression on the URI's path.\n\nUpon a match, it adds placeholders to the request: `{http.regexp.name.capture_group}`\nwhere `name` is the regular expression's name, and `capture_group` is either\nthe named or positional capture group from the expression itself. If no name\nis given, then the placeholder omits the name: `{http.regexp.capture_group}`\n(potentially leading to collisions).\n",
            "type": "object",
            "properties": {
                "name": {
                    "description": "string\nModule: http.matchers.path_regexp\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchPathRE",
                    "type": "string"
                },
                "pattern": {
                    "description": "string\nModule: http.matchers.path_regexp\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchPathRE",
                    "type": "string"
                }
            }
        },
        "http.matchers.protocol": {
            "description": "string\nModule: http.matchers.protocol\n<hr>\nMatchProtocol matches requests by protocol.\n",
            "type": "string"
        },
        "http.matchers.query": {
            "description": "object\nModule: http.matchers.query\n<hr>\nMatchQuery matches requests by URI's query string.\n",
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "http.matchers.remote_ip": {
            "description": "object\nModule: http.matchers.remote_ip\n<hr>\nMatchRemoteIP matches requests by client IP (or CIDR range).\n",
            "type": "object",
            "properties": {
                "ranges": {
                    "description": "array\nModule: http.matchers.remote_ip\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchRemoteIP",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "http.matchers.vars": {
            "description": "object\nModule: http.matchers.vars\n<hr>\nVarsMatcher is an HTTP request matcher which can match\nrequests based on variables in the context.\n",
            "type": "object",
            "additionalProperties": {}
        },
        "http.matchers.vars_regexp": {
            "description": "object\nModule: http.matchers.vars_regexp\n<hr>\nMatchVarsRE matches the value of the context variables by a given regular expression.\n\nUpon a match, it adds placeholders to the request: `{http.regexp.name.capture_group}`\nwhere `name` is the regular expression's name, and `capture_group` is either\nthe named or positional capture group from the expression itself. If no name\nis given, then the placeholder omits the name: `{http.regexp.capture_group}`\n(potentially leading to collisions).\n",
            "type": "object",
            "additionalProperties": {
                "properties": {
                    "name": {
                        "description": "string\nModule: http.matchers.vars_regexp\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchVarsRE",
                        "type": "string"
                    },
                    "pattern": {
                        "description": "string\nModule: http.matchers.vars_regexp\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchVarsRE",
                        "type": "string"
                    }
                }
            }
        },
        "http.reverse_proxy.selection_policies.first": {
            "description": "object\nModule: http.reverse_proxy.selection_policies.first\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#FirstSelection",
            "type": "object"
        },
        "http.reverse_proxy.selection_policies.header": {
            "description": "object\nModule: http.reverse_proxy.selection_policies.header\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HeaderHashSelection",
            "type": "object",
            "properties": {
                "field": {
                    "description": "string\nModule: http.reverse_proxy.selection_policies.header\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HeaderHashSelection",
                    "type": "string"
                }
            }
        },
        "http.reverse_proxy.selection_policies.ip_hash": {
            "description": "object\nModule: http.reverse_proxy.selection_policies.ip_hash\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#IPHashSelection",
            "type": "object"
        },
        "http.reverse_proxy.selection_policies.least_conn": {
            "description": "object\nModule: http.reverse_proxy.selection_policies.least_conn\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#LeastConnSelection",
            "type": "object"
        },
        "http.reverse_proxy.selection_policies.random": {
            "description": "object\nModule: http.reverse_proxy.selection_policies.random\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#RandomSelection",
            "type": "object"
        },
        "http.reverse_proxy.selection_policies.random_choose": {
            "description": "object\nModule: http.reverse_proxy.selection_policies.random_choose\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#RandomChoiceSelection",
            "type": "object",
            "properties": {
                "choose": {
                    "description": "number\nModule: http.reverse_proxy.selection_policies.random_choose\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#RandomChoiceSelection",
                    "type": "number"
                }
            }
        },
        "http.reverse_proxy.selection_policies.round_robin": {
            "description": "object\nModule: http.reverse_proxy.selection_policies.round_robin\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#RoundRobinSelection",
            "type": "object"
        },
        "http.reverse_proxy.selection_policies.uri_hash": {
            "description": "object\nModule: http.reverse_proxy.selection_policies.uri_hash\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#URIHashSelection",
            "type": "object"
        },
        "http.reverse_proxy.transport.fastcgi": {
            "description": "object\nModule: http.reverse_proxy.transport.fastcgi\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy/fastcgi#Transport",
            "type": "object",
            "properties": {
                "dial_timeout": {
                    "description": "number\nModule: http.reverse_proxy.transport.fastcgi\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy/fastcgi#Transport",
                    "type": "number"
                },
                "env": {
                    "description": "object\nModule: http.reverse_proxy.transport.fastcgi\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy/fastcgi#Transport",
                    "type": "object",
                    "additionalProperties": {}
                },
                "read_timeout": {
                    "description": "number\nModule: http.reverse_proxy.transport.fastcgi\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy/fastcgi#Transport",
                    "type": "number"
                },
                "root": {
                    "description": "string\nModule: http.reverse_proxy.transport.fastcgi\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy/fastcgi#Transport",
                    "type": "string"
                },
                "split_path": {
                    "description": "array\nModule: http.reverse_proxy.transport.fastcgi\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy/fastcgi#Transport",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "write_timeout": {
                    "description": "number\nModule: http.reverse_proxy.transport.fastcgi\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy/fastcgi#Transport",
                    "type": "number"
                }
            }
        },
        "http.reverse_proxy.transport.http": {
            "description": "object\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
            "type": "object",
            "properties": {
                "compression": {
                    "description": "boolean\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                    "type": "boolean"
                },
                "dial_fallback_delay": {
                    "description": "number\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                    "type": "number"
                },
                "dial_timeout": {
                    "description": "number\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                    "type": "number"
                },
                "expect_continue_timeout": {
                    "description": "number\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                    "type": "number"
                },
                "keep_alive": {
                    "description": "object\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "description": "boolean\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                            "type": "boolean"
                        },
                        "idle_timeout": {
                            "description": "number\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                            "type": "number"
                        },
                        "max_idle_conns": {
                            "description": "number\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                            "type": "number"
                        },
                        "max_idle_conns_per_host": {
                            "description": "number\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                            "type": "number"
                        },
                        "probe_interval": {
                            "description": "number\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                            "type": "number"
                        }
                    }
                },
                "max_conns_per_host": {
                    "description": "number\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                    "type": "number"
                },
                "max_response_header_size": {
                    "description": "number\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                    "type": "number"
                },
                "read_buffer_size": {
                    "description": "number\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                    "type": "number"
                },
                "response_header_timeout": {
                    "description": "number\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                    "type": "number"
                },
                "tls": {
                    "description": "object\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                    "type": "object",
                    "properties": {
                        "client_certificate_file": {
                            "description": "string\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                            "type": "string"
                        },
                        "client_certificate_key_file": {
                            "description": "string\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                            "type": "string"
                        },
                        "handshake_timeout": {
                            "description": "number\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                            "type": "number"
                        },
                        "insecure_skip_verify": {
                            "description": "boolean\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                            "type": "boolean"
                        },
                        "root_ca_pem_files": {
                            "description": "array\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "root_ca_pool": {
                            "description": "array\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "server_name": {
                            "description": "string\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                            "type": "string"
                        }
                    }
                },
                "versions": {
                    "description": "array\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "write_buffer_size": {
                    "description": "number\nModule: http.reverse_proxy.transport.http\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport",
                    "type": "number"
                }
            }
        },
        "pki": {
            "description": "object\nModule: pki\n<hr>\nPKI provides Public Key Infrastructure facilities for Caddy.\n",
            "type": "object",
            "properties": {
                "certificate_authorities": {
                    "description": "object\nModule: pki\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI",
                    "type": "object",
                    "additionalProperties": {
                        "properties": {
                            "install_trust": {
                                "description": "boolean\nModule: pki\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI",
                                "type": "boolean"
                            },
                            "intermediate": {
                                "description": "object\nModule: pki\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI",
                                "type": "object",
                                "properties": {
                                    "certificate": {
                                        "description": "string\nModule: pki\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI",
                                        "type": "string"
                                    },
                                    "format": {
                                        "description": "string\nModule: pki\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI",
                                        "type": "string"
                                    },
                                    "private_key": {
                                        "description": "string\nModule: pki\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI",
                                        "type": "string"
                                    }
                                }
                            },
                            "intermediate_common_name": {
                                "description": "string\nModule: pki\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI",
                                "type": "string"
                            },
                            "name": {
                                "description": "string\nModule: pki\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI",
                                "type": "string"
                            },
                            "root": {
                                "description": "object\nModule: pki\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI",
                                "type": "object",
                                "properties": {
                                    "certificate": {
                                        "description": "string\nModule: pki\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI",
                                        "type": "string"
                                    },
                                    "format": {
                                        "description": "string\nModule: pki\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI",
                                        "type": "string"
                                    },
                                    "private_key": {
                                        "description": "string\nModule: pki\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI",
                                        "type": "string"
                                    }
                                }
                            },
                            "root_common_name": {
                                "description": "string\nModule: pki\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI",
                                "type": "string"
                            },
                            "storage": {
                                "description": "array\nModule: caddy.storage\n<hr>\n",
                                "type": "array",
                                "items": {
                                    "required": [
                                        "module"
                                    ],
                                    "allOf": [
                                        {
                                            "if": {
                                                "properties": {
                                                    "module": {
                                                        "const": "file_system"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/caddy.storage.file_system"
                                            }
                                        },
                                        {
                                            "properties": {
                                                "module": {
                                                    "description": "module name\nstring\nModule: caddy.storage\n<hr>\n",
                                                    "type": "string",
                                                    "enum": [
                                                        "file_system"
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "tls": {
            "description": "object\nModule: tls\n<hr>\nTLS provides TLS facilities including certificate\nloading and management, client auth, and more.\n",
            "type": "object",
            "properties": {
                "automation": {
                    "description": "object\nModule: tls\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS",
                    "type": "object",
                    "properties": {
                        "ocsp_interval": {
                            "description": "number\nModule: tls\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS",
                            "type": "number"
                        },
                        "on_demand": {
                            "description": "object\nModule: tls\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS",
                            "type": "object",
                            "properties": {
                                "ask": {
                                    "description": "string\nModule: tls\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS",
                                    "type": "string"
                                },
                                "rate_limit": {
                                    "description": "object\nModule: tls\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS",
                                    "type": "object",
                                    "properties": {
                                        "burst": {
                                            "description": "number\nModule: tls\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS",
                                            "type": "number"
                                        },
                                        "interval": {
                                            "description": "number\nModule: tls\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS",
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        },
                        "policies": {
                            "description": "array\nModule: tls\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "issuer": {
                                        "description": "array\nModule: tls.issuance\n<hr>\n",
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "module"
                                            ],
                                            "allOf": [
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "module": {
                                                                "const": "acme"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/tls.issuance.acme"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "module": {
                                                                "const": "internal"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/tls.issuance.internal"
                                                    }
                                                },
                                                {
                                                    "properties": {
                                                        "module": {
                                                            "description": "module name\nstring\nModule: tls.issuance\n<hr>\n",
                                                            "type": "string",
                                                            "enum": [
                                                                "acme",
                                                                "internal"
                                                            ]
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "key_type": {
                                        "description": "string\nModule: tls\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS",
                                        "type": "string"
                                    },
                                    "must_staple": {
                                        "description": "boolean\nModule: tls\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS",
                                        "type": "boolean"
                                    },
                                    "on_demand": {
                                        "description": "boolean\nModule: tls\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS",
                                        "type": "boolean"
                                    },
                                    "renewal_window_ratio": {
                                        "description": "object\nModule: tls\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS",
                                        "type": "object"
                                    },
                                    "storage": {
                                        "description": "array\nModule: caddy.storage\n<hr>\n",
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "module"
                                            ],
                                            "allOf": [
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "module": {
                                                                "const": "file_system"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/caddy.storage.file_system"
                                                    }
                                                },
                                                {
                                                    "properties": {
                                                        "module": {
                                                            "description": "module name\nstring\nModule: caddy.storage\n<hr>\n",
                                                            "type": "string",
                                                            "enum": [
                                                                "file_system"
                                                            ]
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "subjects": {
                                        "description": "array\nModule: tls\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "renew_interval": {
                            "description": "number\nModule: tls\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS",
                            "type": "number"
                        }
                    }
                },
                "certificates": {
                    "description": "array\nModule: tls.certificates\n<hr>\n",
                    "type": "array",
                    "items": {
                        "properties": {
                            "automate": {
                                "$ref": "#/definitions/tls.certificates.automate"
                            },
                            "load_files": {
                                "$ref": "#/definitions/tls.certificates.load_files"
                            },
                            "load_folders": {
                                "$ref": "#/definitions/tls.certificates.load_folders"
                            },
                            "load_pem": {
                                "$ref": "#/definitions/tls.certificates.load_pem"
                            }
                        }
                    }
                },
                "session_tickets": {
                    "description": "object\nModule: tls\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS",
                    "type": "object",
                    "properties": {
                        "disable_rotation": {
                            "description": "boolean\nModule: tls\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS",
                            "type": "boolean"
                        },
                        "disabled": {
                            "description": "boolean\nModule: tls\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS",
                            "type": "boolean"
                        },
                        "key_source": {
                            "description": "array\nModule: tls.stek\n<hr>\n",
                            "type": "array",
                            "items": {
                                "required": [
                                    "provider"
                                ],
                                "allOf": [
                                    {
                                        "if": {
                                            "properties": {
                                                "provider": {
                                                    "const": "distributed"
                                                }
                                            }
                                        },
                                        "then": {
                                            "$ref": "#/definitions/tls.stek.distributed"
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "provider": {
                                                    "const": "standard"
                                                }
                                            }
                                        },
                                        "then": {
                                            "$ref": "#/definitions/tls.stek.standard"
                                        }
                                    },
                                    {
                                        "properties": {
                                            "provider": {
                                                "description": "provider name\nstring\nModule: tls.stek\n<hr>\n",
                                                "type": "string",
                                                "enum": [
                                                    "distributed",
                                                    "standard"
                                                ]
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        "max_keys": {
                            "description": "number\nModule: tls\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS",
                            "type": "number"
                        },
                        "rotation_interval": {
                            "description": "number\nModule: tls\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS",
                            "type": "number"
                        }
                    }
                }
            }
        },
        "tls.certificates.automate": {
            "description": "array\nModule: tls.certificates.automate\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#AutomateLoader",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "tls.certificates.load_files": {
            "description": "array\nModule: tls.certificates.load_files\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#FileLoader",
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "certificate": {
                        "description": "string\nModule: tls.certificates.load_files\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#FileLoader",
                        "type": "string"
                    },
                    "format": {
                        "description": "string\nModule: tls.certificates.load_files\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#FileLoader",
                        "type": "string"
                    },
                    "key": {
                        "description": "string\nModule: tls.certificates.load_files\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#FileLoader",
                        "type": "string"
                    },
                    "tags": {
                        "description": "array\nModule: tls.certificates.load_files\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#FileLoader",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "tls.certificates.load_folders": {
            "description": "array\nModule: tls.certificates.load_folders\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#FolderLoader",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "tls.certificates.load_pem": {
            "description": "array\nModule: tls.certificates.load_pem\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#PEMLoader",
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "certificate": {
                        "description": "string\nModule: tls.certificates.load_pem\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#PEMLoader",
                        "type": "string"
                    },
                    "key": {
                        "description": "string\nModule: tls.certificates.load_pem\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#PEMLoader",
                        "type": "string"
                    },
                    "tags": {
                        "description": "array\nModule: tls.certificates.load_pem\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#PEMLoader",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "tls.handshake_match.sni": {
            "description": "array\nModule: tls.handshake_match.sni\n<hr>\nMatchServerName matches based on SNI. Names in\nthis list may use left-most-label wildcards,\nsimilar to wildcard certificates.\n",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "tls.issuance.acme": {
            "description": "object\nModule: tls.issuance.acme\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer",
            "type": "object",
            "properties": {
                "acme_timeout": {
                    "description": "number\nModule: tls.issuance.acme\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer",
                    "type": "number"
                },
                "ca": {
                    "description": "string\nModule: tls.issuance.acme\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer",
                    "type": "string"
                },
                "challenges": {
                    "description": "object\nModule: tls.issuance.acme\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer",
                    "type": "object",
                    "properties": {
                        "bind_host": {
                            "description": "string\nModule: tls.issuance.acme\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer",
                            "type": "string"
                        },
                        "dns": {
                            "description": "object\nModule: tls.issuance.acme\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer",
                            "type": "object",
                            "properties": {
                                "provider": {
                                    "description": "object\nModule: dns.providers\n<hr>\n",
                                    "type": "object"
                                },
                                "ttl": {
                                    "description": "number\nModule: tls.issuance.acme\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer",
                                    "type": "number"
                                }
                            }
                        },
                        "http": {
                            "description": "object\nModule: tls.issuance.acme\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer",
                            "type": "object",
                            "properties": {
                                "alternate_port": {
                                    "description": "number\nModule: tls.issuance.acme\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer",
                                    "type": "number"
                                },
                                "disabled": {
                                    "description": "boolean\nModule: tls.issuance.acme\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer",
                                    "type": "boolean"
                                }
                            }
                        },
                        "tls-alpn": {
                            "description": "object\nModule: tls.issuance.acme\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer",
                            "type": "object",
                            "properties": {
                                "alternate_port": {
                                    "description": "number\nModule: tls.issuance.acme\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer",
                                    "type": "number"
                                },
                                "disabled": {
                                    "description": "boolean\nModule: tls.issuance.acme\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer",
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "email": {
                    "description": "string\nModule: tls.issuance.acme\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer",
                    "type": "string"
                },
                "external_account": {
                    "description": "object\nModule: tls.issuance.acme\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer",
                    "type": "object",
                    "properties": {
                        "hmac": {
                            "description": "string\nModule: tls.issuance.acme\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer",
                            "type": "string"
                        },
                        "key_id": {
                            "description": "string\nModule: tls.issuance.acme\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer",
                            "type": "string"
                        }
                    }
                },
                "test_ca": {
                    "description": "string\nModule: tls.issuance.acme\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer",
                    "type": "string"
                },
                "trusted_roots_pem_files": {
                    "description": "array\nModule: tls.issuance.acme\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "tls.issuance.internal": {
            "description": "object\nModule: tls.issuance.internal\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#InternalIssuer",
            "type": "object",
            "properties": {
                "ca": {
                    "description": "string\nModule: tls.issuance.internal\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#InternalIssuer",
                    "type": "string"
                },
                "lifetime": {
                    "description": "number\nModule: tls.issuance.internal\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#InternalIssuer",
                    "type": "number"
                },
                "sign_with_root": {
                    "description": "boolean\nModule: tls.issuance.internal\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#InternalIssuer",
                    "type": "boolean"
                }
            }
        },
        "tls.stek.distributed": {
            "description": "object\nModule: tls.stek.distributed\n<hr>\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls/distributedstek#Provider",
            "type": "object",
            "properties": {
                "storage": {
                    "description": "array\nModule: caddy.storage\n<hr>\n",
                    "type": "array",
                    "items": {
                        "required": [
                            "module"
                        ],
                        "allOf": [
                            {
                                "if": {
                                    "properties": {
                                        "module": {
                                            "const": "file_system"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.storage.file_system"
                                }
                            },
                            {
                                "properties": {
                                    "module": {
                                        "description": "module name\nstring\nModule: caddy.storage\n<hr>\n",
                                        "type": "string",
                                        "enum": [
                                            "file_system"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        },
        "tls.stek.standard": {
            "description": "object\nModule: tls.stek.standard\n<hr>\n",
            "type": "object"
        }
    },
    "properties": {
        "apps": {
            "properties": {
                "exec": {
                    "$ref": "#/definitions/exec"
                },
                "http": {
                    "$ref": "#/definitions/http"
                },
                "pki": {
                    "$ref": "#/definitions/pki"
                },
                "tls": {
                    "$ref": "#/definitions/tls"
                }
            }
        }
    },
    "required": [
        "apps"
    ],
    "additionalItems": true
}