{
    "title": "Caddy v2 autogenerated JSON schema",
    "type": "object",
    "definitions": {
        "admin.api.load": {
            "description": "object\nModule: admin.api.load",
            "type": "object"
        },
        "caddy.adapters.caddyfile": {
            "description": "object\nModule: caddy.adapters.caddyfile",
            "type": "object"
        },
        "caddy.listeners.tls": {
            "description": "object\nModule: caddy.listeners.tls",
            "type": "object"
        },
        "caddy.logging.encoders.console": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder\nobject\nModule: caddy.logging.encoders.console",
            "type": "object",
            "properties": {
                "caller_key": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder\nstring\nModule: caddy.logging.encoders.console",
                    "type": "string"
                },
                "duration_format": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder\nstring\nModule: caddy.logging.encoders.console",
                    "type": "string"
                },
                "level_format": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder\nstring\nModule: caddy.logging.encoders.console",
                    "type": "string"
                },
                "level_key": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder\nstring\nModule: caddy.logging.encoders.console",
                    "type": "string"
                },
                "line_ending": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder\nstring\nModule: caddy.logging.encoders.console",
                    "type": "string"
                },
                "message_key": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder\nstring\nModule: caddy.logging.encoders.console",
                    "type": "string"
                },
                "name_key": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder\nstring\nModule: caddy.logging.encoders.console",
                    "type": "string"
                },
                "stacktrace_key": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder\nstring\nModule: caddy.logging.encoders.console",
                    "type": "string"
                },
                "time_format": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder\nstring\nModule: caddy.logging.encoders.console",
                    "type": "string"
                },
                "time_key": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#ConsoleEncoder\nstring\nModule: caddy.logging.encoders.console",
                    "type": "string"
                }
            }
        },
        "caddy.logging.encoders.filter": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#FilterEncoder\nobject\nModule: caddy.logging.encoders.filter",
            "type": "object",
            "properties": {
                "fields": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#FilterEncoder\narray\nModule: caddy.logging.encoders.filter",
                    "type": "array",
                    "items": {
                        "required": [
                            "filter"
                        ],
                        "allOf": [
                            {
                                "if": {
                                    "properties": {
                                        "filter": {
                                            "const": "ip_mask"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.filter.ip_mask"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "filter": {
                                            "const": "delete"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.filter.delete"
                                }
                            },
                            {
                                "properties": {
                                    "filter": {
                                        "description": "filter name\nhttps://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#FilterEncoder\nstring\nModule: caddy.logging.encoders.filter",
                                        "type": "string",
                                        "enum": [
                                            "ip_mask",
                                            "delete"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                },
                "wrap": {
                    "description": "array\nModule: caddy.logging.encoders",
                    "type": "array",
                    "items": {
                        "required": [
                            "format"
                        ],
                        "allOf": [
                            {
                                "if": {
                                    "properties": {
                                        "format": {
                                            "const": "console"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.console"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "format": {
                                            "const": "filter"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.filter"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "format": {
                                            "const": "json"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.json"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "format": {
                                            "const": "logfmt"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.logfmt"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "format": {
                                            "const": "single_field"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.single_field"
                                }
                            },
                            {
                                "properties": {
                                    "format": {
                                        "description": "format name\nstring\nModule: caddy.logging.encoders",
                                        "type": "string",
                                        "enum": [
                                            "console",
                                            "filter",
                                            "json",
                                            "logfmt",
                                            "single_field"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        },
        "caddy.logging.encoders.filter.delete": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#DeleteFilter\nobject\nModule: caddy.logging.encoders.filter.delete",
            "type": "object"
        },
        "caddy.logging.encoders.filter.ip_mask": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#IPMaskFilter\nobject\nModule: caddy.logging.encoders.filter.ip_mask",
            "type": "object",
            "properties": {
                "ipv4_cidr": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#IPMaskFilter\nnumber\nModule: caddy.logging.encoders.filter.ip_mask",
                    "type": "number"
                },
                "ipv6_cidr": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#IPMaskFilter\nnumber\nModule: caddy.logging.encoders.filter.ip_mask",
                    "type": "number"
                }
            }
        },
        "caddy.logging.encoders.json": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder\nobject\nModule: caddy.logging.encoders.json",
            "type": "object",
            "properties": {
                "caller_key": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder\nstring\nModule: caddy.logging.encoders.json",
                    "type": "string"
                },
                "duration_format": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder\nstring\nModule: caddy.logging.encoders.json",
                    "type": "string"
                },
                "level_format": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder\nstring\nModule: caddy.logging.encoders.json",
                    "type": "string"
                },
                "level_key": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder\nstring\nModule: caddy.logging.encoders.json",
                    "type": "string"
                },
                "line_ending": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder\nstring\nModule: caddy.logging.encoders.json",
                    "type": "string"
                },
                "message_key": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder\nstring\nModule: caddy.logging.encoders.json",
                    "type": "string"
                },
                "name_key": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder\nstring\nModule: caddy.logging.encoders.json",
                    "type": "string"
                },
                "stacktrace_key": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder\nstring\nModule: caddy.logging.encoders.json",
                    "type": "string"
                },
                "time_format": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder\nstring\nModule: caddy.logging.encoders.json",
                    "type": "string"
                },
                "time_key": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#JSONEncoder\nstring\nModule: caddy.logging.encoders.json",
                    "type": "string"
                }
            }
        },
        "caddy.logging.encoders.logfmt": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder\nobject\nModule: caddy.logging.encoders.logfmt",
            "type": "object",
            "properties": {
                "caller_key": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder\nstring\nModule: caddy.logging.encoders.logfmt",
                    "type": "string"
                },
                "duration_format": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder\nstring\nModule: caddy.logging.encoders.logfmt",
                    "type": "string"
                },
                "level_format": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder\nstring\nModule: caddy.logging.encoders.logfmt",
                    "type": "string"
                },
                "level_key": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder\nstring\nModule: caddy.logging.encoders.logfmt",
                    "type": "string"
                },
                "line_ending": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder\nstring\nModule: caddy.logging.encoders.logfmt",
                    "type": "string"
                },
                "message_key": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder\nstring\nModule: caddy.logging.encoders.logfmt",
                    "type": "string"
                },
                "name_key": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder\nstring\nModule: caddy.logging.encoders.logfmt",
                    "type": "string"
                },
                "stacktrace_key": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder\nstring\nModule: caddy.logging.encoders.logfmt",
                    "type": "string"
                },
                "time_format": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder\nstring\nModule: caddy.logging.encoders.logfmt",
                    "type": "string"
                },
                "time_key": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#LogfmtEncoder\nstring\nModule: caddy.logging.encoders.logfmt",
                    "type": "string"
                }
            }
        },
        "caddy.logging.encoders.single_field": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#SingleFieldEncoder\nobject\nModule: caddy.logging.encoders.single_field",
            "type": "object",
            "properties": {
                "fallback": {
                    "description": "array\nModule: caddy.logging.encoders",
                    "type": "array",
                    "items": {
                        "required": [
                            "format"
                        ],
                        "allOf": [
                            {
                                "if": {
                                    "properties": {
                                        "format": {
                                            "const": "filter"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.filter"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "format": {
                                            "const": "json"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.json"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "format": {
                                            "const": "logfmt"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.logfmt"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "format": {
                                            "const": "single_field"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.single_field"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "format": {
                                            "const": "console"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.logging.encoders.console"
                                }
                            },
                            {
                                "properties": {
                                    "format": {
                                        "description": "format name\nstring\nModule: caddy.logging.encoders",
                                        "type": "string",
                                        "enum": [
                                            "filter",
                                            "json",
                                            "logfmt",
                                            "single_field",
                                            "console"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                },
                "field": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#SingleFieldEncoder\nstring\nModule: caddy.logging.encoders.single_field",
                    "type": "string"
                }
            }
        },
        "caddy.logging.writers.discard": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2#DiscardWriter\nobject\nModule: caddy.logging.writers.discard",
            "type": "object"
        },
        "caddy.logging.writers.file": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#FileWriter\nobject\nModule: caddy.logging.writers.file",
            "type": "object",
            "properties": {
                "filename": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#FileWriter\nstring\nModule: caddy.logging.writers.file",
                    "type": "string"
                },
                "roll": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#FileWriter\nboolean\nModule: caddy.logging.writers.file",
                    "type": "boolean"
                },
                "roll_gzip": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#FileWriter\nboolean\nModule: caddy.logging.writers.file",
                    "type": "boolean"
                },
                "roll_keep": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#FileWriter\nnumber\nModule: caddy.logging.writers.file",
                    "type": "number"
                },
                "roll_keep_days": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#FileWriter\nnumber\nModule: caddy.logging.writers.file",
                    "type": "number"
                },
                "roll_local_time": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#FileWriter\nboolean\nModule: caddy.logging.writers.file",
                    "type": "boolean"
                },
                "roll_size_mb": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#FileWriter\nnumber\nModule: caddy.logging.writers.file",
                    "type": "number"
                }
            }
        },
        "caddy.logging.writers.net": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#NetWriter\nobject\nModule: caddy.logging.writers.net",
            "type": "object",
            "properties": {
                "address": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/logging#NetWriter\nstring\nModule: caddy.logging.writers.net",
                    "type": "string"
                }
            }
        },
        "caddy.logging.writers.stderr": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2#StderrWriter\nobject\nModule: caddy.logging.writers.stderr",
            "type": "object"
        },
        "caddy.logging.writers.stdout": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2#StdoutWriter\nobject\nModule: caddy.logging.writers.stdout",
            "type": "object"
        },
        "caddy.storage.file_system": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/filestorage#FileStorage\nobject\nModule: caddy.storage.file_system",
            "type": "object",
            "properties": {
                "root": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/filestorage#FileStorage\nstring\nModule: caddy.storage.file_system",
                    "type": "string"
                }
            }
        },
        "exec": {
            "description": "https://pkg.go.dev/github.com/abiosoft/caddy-exec#App\nobject\nModule: exec",
            "type": "object",
            "properties": {
                "commands": {
                    "description": "https://pkg.go.dev/github.com/abiosoft/caddy-exec#App\narray\nModule: exec",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "args": {
                                "description": "https://pkg.go.dev/github.com/abiosoft/caddy-exec#App\narray\nModule: exec",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "at": {
                                "description": "https://pkg.go.dev/github.com/abiosoft/caddy-exec#App\narray\nModule: exec",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "command": {
                                "description": "https://pkg.go.dev/github.com/abiosoft/caddy-exec#App\nstring\nModule: exec",
                                "type": "string"
                            },
                            "directory": {
                                "description": "https://pkg.go.dev/github.com/abiosoft/caddy-exec#App\nstring\nModule: exec",
                                "type": "string"
                            },
                            "foreground": {
                                "description": "https://pkg.go.dev/github.com/abiosoft/caddy-exec#App\nboolean\nModule: exec",
                                "type": "boolean"
                            },
                            "timeout": {
                                "description": "https://pkg.go.dev/github.com/abiosoft/caddy-exec#App\nstring\nModule: exec",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "http": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nobject\nModule: http",
            "type": "object",
            "properties": {
                "grace_period": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nnumber\nModule: http",
                    "type": "number"
                },
                "http_port": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nnumber\nModule: http",
                    "type": "number"
                },
                "https_port": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nnumber\nModule: http",
                    "type": "number"
                },
                "servers": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nobject\nModule: http",
                    "type": "object",
                    "additionalProperties": {
                        "properties": {
                            "automatic_https": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nobject\nModule: http",
                                "type": "object",
                                "properties": {
                                    "disable": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nboolean\nModule: http",
                                        "type": "boolean"
                                    },
                                    "disable_redirects": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nboolean\nModule: http",
                                        "type": "boolean"
                                    },
                                    "ignore_loaded_certificates": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nboolean\nModule: http",
                                        "type": "boolean"
                                    },
                                    "skip": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\narray\nModule: http",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "skip_certificates": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\narray\nModule: http",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "errors": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nobject\nModule: http",
                                "type": "object",
                                "properties": {
                                    "routes": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\narray\nModule: http",
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "group": {
                                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nstring\nModule: http",
                                                    "type": "string"
                                                },
                                                "handle": {
                                                    "description": "array\nModule: http.handlers",
                                                    "type": "array",
                                                    "items": {
                                                        "required": [
                                                            "handler"
                                                        ],
                                                        "allOf": [
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "encode"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.encode"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "static_response"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.static_response"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "subroute"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.subroute"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "visitor_ip"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.visitor_ip"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "exec"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.exec"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "file_server"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.file_server"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "rewrite"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.rewrite"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "headers"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.headers"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "hmac"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.hmac"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "reverse_proxy"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.reverse_proxy"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "vars"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.vars"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "templates"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.templates"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "authentication"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.authentication"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "error"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.error"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "json_parse"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.json_parse"
                                                                }
                                                            },
                                                            {
                                                                "if": {
                                                                    "properties": {
                                                                        "handler": {
                                                                            "const": "request_body"
                                                                        }
                                                                    }
                                                                },
                                                                "then": {
                                                                    "$ref": "#/definitions/http.handlers.request_body"
                                                                }
                                                            },
                                                            {
                                                                "properties": {
                                                                    "handler": {
                                                                        "description": "handler name\nstring\nModule: http.handlers",
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "encode",
                                                                            "static_response",
                                                                            "subroute",
                                                                            "visitor_ip",
                                                                            "exec",
                                                                            "file_server",
                                                                            "rewrite",
                                                                            "headers",
                                                                            "hmac",
                                                                            "reverse_proxy",
                                                                            "vars",
                                                                            "templates",
                                                                            "authentication",
                                                                            "error",
                                                                            "json_parse",
                                                                            "request_body"
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                },
                                                "match": {
                                                    "description": "array\nModule: http.matchers",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "execnopmatch": {
                                                                "$ref": "#/definitions/http.matchers.execnopmatch"
                                                            },
                                                            "expression": {
                                                                "$ref": "#/definitions/http.matchers.expression"
                                                            },
                                                            "file": {
                                                                "$ref": "#/definitions/http.matchers.file"
                                                            },
                                                            "header": {
                                                                "$ref": "#/definitions/http.matchers.header"
                                                            },
                                                            "header_regexp": {
                                                                "$ref": "#/definitions/http.matchers.header_regexp"
                                                            },
                                                            "host": {
                                                                "$ref": "#/definitions/http.matchers.host"
                                                            },
                                                            "method": {
                                                                "$ref": "#/definitions/http.matchers.method"
                                                            },
                                                            "not": {
                                                                "$ref": "#/definitions/http.matchers.not"
                                                            },
                                                            "path": {
                                                                "$ref": "#/definitions/http.matchers.path"
                                                            },
                                                            "path_regexp": {
                                                                "$ref": "#/definitions/http.matchers.path_regexp"
                                                            },
                                                            "protocol": {
                                                                "$ref": "#/definitions/http.matchers.protocol"
                                                            },
                                                            "query": {
                                                                "$ref": "#/definitions/http.matchers.query"
                                                            },
                                                            "remote_ip": {
                                                                "$ref": "#/definitions/http.matchers.remote_ip"
                                                            },
                                                            "vars": {
                                                                "$ref": "#/definitions/http.matchers.vars"
                                                            },
                                                            "vars_regexp": {
                                                                "$ref": "#/definitions/http.matchers.vars_regexp"
                                                            }
                                                        }
                                                    }
                                                },
                                                "terminal": {
                                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nboolean\nModule: http",
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "experimental_http3": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nboolean\nModule: http",
                                "type": "boolean"
                            },
                            "idle_timeout": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nnumber\nModule: http",
                                "type": "number"
                            },
                            "listen": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\narray\nModule: http",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "listener_wrappers": {
                                "description": "array\nModule: caddy.listeners",
                                "type": "array",
                                "items": {
                                    "required": [
                                        "wrapper"
                                    ],
                                    "allOf": [
                                        {
                                            "if": {
                                                "properties": {
                                                    "wrapper": {
                                                        "const": "tls"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/caddy.listeners.tls"
                                            }
                                        },
                                        {
                                            "properties": {
                                                "wrapper": {
                                                    "description": "wrapper name\nstring\nModule: caddy.listeners",
                                                    "type": "string",
                                                    "enum": [
                                                        "tls"
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            "logs": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nobject\nModule: http",
                                "type": "object",
                                "properties": {
                                    "default_logger_name": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nstring\nModule: http",
                                        "type": "string"
                                    },
                                    "logger_names": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nobject\nModule: http",
                                        "type": "object",
                                        "additionalProperties": {}
                                    },
                                    "skip_hosts": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\narray\nModule: http",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "skip_unmapped_hosts": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nboolean\nModule: http",
                                        "type": "boolean"
                                    }
                                }
                            },
                            "max_header_bytes": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nnumber\nModule: http",
                                "type": "number"
                            },
                            "read_header_timeout": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nnumber\nModule: http",
                                "type": "number"
                            },
                            "read_timeout": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nnumber\nModule: http",
                                "type": "number"
                            },
                            "routes": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\narray\nModule: http",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "group": {
                                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nstring\nModule: http",
                                            "type": "string"
                                        },
                                        "handle": {
                                            "description": "array\nModule: http.handlers",
                                            "type": "array",
                                            "items": {
                                                "required": [
                                                    "handler"
                                                ],
                                                "allOf": [
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "vars"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.vars"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "headers"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.headers"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "hmac"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.hmac"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "reverse_proxy"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.reverse_proxy"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "request_body"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.request_body"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "templates"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.templates"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "authentication"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.authentication"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "error"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.error"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "json_parse"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.json_parse"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "visitor_ip"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.visitor_ip"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "encode"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.encode"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "static_response"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.static_response"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "subroute"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.subroute"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "exec"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.exec"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "file_server"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.file_server"
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "handler": {
                                                                    "const": "rewrite"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "$ref": "#/definitions/http.handlers.rewrite"
                                                        }
                                                    },
                                                    {
                                                        "properties": {
                                                            "handler": {
                                                                "description": "handler name\nstring\nModule: http.handlers",
                                                                "type": "string",
                                                                "enum": [
                                                                    "vars",
                                                                    "headers",
                                                                    "hmac",
                                                                    "reverse_proxy",
                                                                    "request_body",
                                                                    "templates",
                                                                    "authentication",
                                                                    "error",
                                                                    "json_parse",
                                                                    "visitor_ip",
                                                                    "encode",
                                                                    "static_response",
                                                                    "subroute",
                                                                    "exec",
                                                                    "file_server",
                                                                    "rewrite"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        "match": {
                                            "description": "array\nModule: http.matchers",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "execnopmatch": {
                                                        "$ref": "#/definitions/http.matchers.execnopmatch"
                                                    },
                                                    "expression": {
                                                        "$ref": "#/definitions/http.matchers.expression"
                                                    },
                                                    "file": {
                                                        "$ref": "#/definitions/http.matchers.file"
                                                    },
                                                    "header": {
                                                        "$ref": "#/definitions/http.matchers.header"
                                                    },
                                                    "header_regexp": {
                                                        "$ref": "#/definitions/http.matchers.header_regexp"
                                                    },
                                                    "host": {
                                                        "$ref": "#/definitions/http.matchers.host"
                                                    },
                                                    "method": {
                                                        "$ref": "#/definitions/http.matchers.method"
                                                    },
                                                    "not": {
                                                        "$ref": "#/definitions/http.matchers.not"
                                                    },
                                                    "path": {
                                                        "$ref": "#/definitions/http.matchers.path"
                                                    },
                                                    "path_regexp": {
                                                        "$ref": "#/definitions/http.matchers.path_regexp"
                                                    },
                                                    "protocol": {
                                                        "$ref": "#/definitions/http.matchers.protocol"
                                                    },
                                                    "query": {
                                                        "$ref": "#/definitions/http.matchers.query"
                                                    },
                                                    "remote_ip": {
                                                        "$ref": "#/definitions/http.matchers.remote_ip"
                                                    },
                                                    "vars": {
                                                        "$ref": "#/definitions/http.matchers.vars"
                                                    },
                                                    "vars_regexp": {
                                                        "$ref": "#/definitions/http.matchers.vars_regexp"
                                                    }
                                                }
                                            }
                                        },
                                        "terminal": {
                                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nboolean\nModule: http",
                                            "type": "boolean"
                                        }
                                    }
                                }
                            },
                            "strict_sni_host": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nboolean\nModule: http",
                                "type": "boolean"
                            },
                            "tls_connection_policies": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\narray\nModule: http",
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "alpn": {
                                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\narray\nModule: http",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "certificate_selection": {
                                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nobject\nModule: http",
                                            "type": "object",
                                            "properties": {
                                                "all_tags": {
                                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\narray\nModule: http",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "any_tag": {
                                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\narray\nModule: http",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "public_key_algorithm": {
                                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nnumber\nModule: http",
                                                    "type": "number"
                                                },
                                                "serial_number": {
                                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\narray\nModule: http",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "subject_organization": {
                                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\narray\nModule: http",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "cipher_suites": {
                                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\narray\nModule: http",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "client_authentication": {
                                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nobject\nModule: http",
                                            "type": "object",
                                            "properties": {
                                                "mode": {
                                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nstring\nModule: http",
                                                    "type": "string"
                                                },
                                                "trusted_ca_certs": {
                                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\narray\nModule: http",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "trusted_leaf_certs": {
                                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\narray\nModule: http",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "curves": {
                                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\narray\nModule: http",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "default_sni": {
                                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nstring\nModule: http",
                                            "type": "string"
                                        },
                                        "match": {
                                            "description": "array\nModule: tls.handshake_match",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "sni": {
                                                        "$ref": "#/definitions/tls.handshake_match.sni"
                                                    }
                                                }
                                            }
                                        },
                                        "protocol_max": {
                                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nstring\nModule: http",
                                            "type": "string"
                                        },
                                        "protocol_min": {
                                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nstring\nModule: http",
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "write_timeout": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#App\nnumber\nModule: http",
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        "http.authentication.hashes.bcrypt": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#BcryptHash\nobject\nModule: http.authentication.hashes.bcrypt",
            "type": "object"
        },
        "http.authentication.hashes.scrypt": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#ScryptHash\nobject\nModule: http.authentication.hashes.scrypt",
            "type": "object",
            "properties": {
                "N": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#ScryptHash\nnumber\nModule: http.authentication.hashes.scrypt",
                    "type": "number"
                },
                "key_length": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#ScryptHash\nnumber\nModule: http.authentication.hashes.scrypt",
                    "type": "number"
                },
                "p": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#ScryptHash\nnumber\nModule: http.authentication.hashes.scrypt",
                    "type": "number"
                },
                "r": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#ScryptHash\nnumber\nModule: http.authentication.hashes.scrypt",
                    "type": "number"
                }
            }
        },
        "http.authentication.providers.http_basic": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#HTTPBasicAuth\nobject\nModule: http.authentication.providers.http_basic",
            "type": "object",
            "properties": {
                "accounts": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#HTTPBasicAuth\narray\nModule: http.authentication.providers.http_basic",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "password": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#HTTPBasicAuth\nstring\nModule: http.authentication.providers.http_basic",
                                "type": "string"
                            },
                            "salt": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#HTTPBasicAuth\nstring\nModule: http.authentication.providers.http_basic",
                                "type": "string"
                            },
                            "username": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#HTTPBasicAuth\nstring\nModule: http.authentication.providers.http_basic",
                                "type": "string"
                            }
                        }
                    }
                },
                "hash": {
                    "description": "array\nModule: http.authentication.hashes",
                    "type": "array",
                    "items": {
                        "required": [
                            "algorithm"
                        ],
                        "allOf": [
                            {
                                "if": {
                                    "properties": {
                                        "algorithm": {
                                            "const": "bcrypt"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/http.authentication.hashes.bcrypt"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "algorithm": {
                                            "const": "scrypt"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/http.authentication.hashes.scrypt"
                                }
                            },
                            {
                                "properties": {
                                    "algorithm": {
                                        "description": "algorithm name\nstring\nModule: http.authentication.hashes",
                                        "type": "string",
                                        "enum": [
                                            "bcrypt",
                                            "scrypt"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                },
                "realm": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#HTTPBasicAuth\nstring\nModule: http.authentication.providers.http_basic",
                    "type": "string"
                }
            }
        },
        "http.encoders.gzip": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/encode/gzip#Gzip\nobject\nModule: http.encoders.gzip",
            "type": "object",
            "properties": {
                "level": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/encode/gzip#Gzip\nnumber\nModule: http.encoders.gzip",
                    "type": "number"
                }
            }
        },
        "http.encoders.zstd": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/encode/zstd#Zstd\nobject\nModule: http.encoders.zstd",
            "type": "object"
        },
        "http.handlers.authentication": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/caddyauth#Authentication\nobject\nModule: http.handlers.authentication",
            "type": "object",
            "properties": {
                "providers": {
                    "description": "array\nModule: http.authentication.providers",
                    "type": "array",
                    "items": {
                        "properties": {
                            "http_basic": {
                                "$ref": "#/definitions/http.authentication.providers.http_basic"
                            }
                        }
                    }
                }
            }
        },
        "http.handlers.encode": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/encode#Encode\nobject\nModule: http.handlers.encode",
            "type": "object",
            "properties": {
                "encodings": {
                    "description": "array\nModule: http.encoders",
                    "type": "array",
                    "items": {
                        "properties": {
                            "gzip": {
                                "$ref": "#/definitions/http.encoders.gzip"
                            },
                            "zstd": {
                                "$ref": "#/definitions/http.encoders.zstd"
                            }
                        }
                    }
                },
                "minimum_length": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/encode#Encode\nnumber\nModule: http.handlers.encode",
                    "type": "number"
                }
            }
        },
        "http.handlers.error": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#StaticError\nobject\nModule: http.handlers.error",
            "type": "object",
            "properties": {
                "error": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#StaticError\nstring\nModule: http.handlers.error",
                    "type": "string"
                },
                "status_code": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#StaticError\nstring\nModule: http.handlers.error",
                    "type": "string"
                }
            }
        },
        "http.handlers.exec": {
            "description": "https://pkg.go.dev/github.com/abiosoft/caddy-exec#Middleware\nobject\nModule: http.handlers.exec",
            "type": "object",
            "properties": {
                "args": {
                    "description": "https://pkg.go.dev/github.com/abiosoft/caddy-exec#Middleware\narray\nModule: http.handlers.exec",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "at": {
                    "description": "https://pkg.go.dev/github.com/abiosoft/caddy-exec#Middleware\narray\nModule: http.handlers.exec",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "command": {
                    "description": "https://pkg.go.dev/github.com/abiosoft/caddy-exec#Middleware\nstring\nModule: http.handlers.exec",
                    "type": "string"
                },
                "directory": {
                    "description": "https://pkg.go.dev/github.com/abiosoft/caddy-exec#Middleware\nstring\nModule: http.handlers.exec",
                    "type": "string"
                },
                "foreground": {
                    "description": "https://pkg.go.dev/github.com/abiosoft/caddy-exec#Middleware\nboolean\nModule: http.handlers.exec",
                    "type": "boolean"
                },
                "timeout": {
                    "description": "https://pkg.go.dev/github.com/abiosoft/caddy-exec#Middleware\nstring\nModule: http.handlers.exec",
                    "type": "string"
                }
            }
        },
        "http.handlers.file_server": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#FileServer\nobject\nModule: http.handlers.file_server",
            "type": "object",
            "properties": {
                "browse": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#FileServer\nobject\nModule: http.handlers.file_server",
                    "type": "object",
                    "properties": {
                        "template_file": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#FileServer\nstring\nModule: http.handlers.file_server",
                            "type": "string"
                        }
                    }
                },
                "canonical_uris": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#FileServer\nboolean\nModule: http.handlers.file_server",
                    "type": "boolean"
                },
                "hide": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#FileServer\narray\nModule: http.handlers.file_server",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "index_names": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#FileServer\narray\nModule: http.handlers.file_server",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pass_thru": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#FileServer\nboolean\nModule: http.handlers.file_server",
                    "type": "boolean"
                },
                "root": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#FileServer\nstring\nModule: http.handlers.file_server",
                    "type": "string"
                }
            }
        },
        "http.handlers.headers": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\nobject\nModule: http.handlers.headers",
            "type": "object",
            "properties": {
                "request": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\nobject\nModule: http.handlers.headers",
                    "type": "object",
                    "properties": {
                        "add": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\nobject\nModule: http.handlers.headers",
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "delete": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\narray\nModule: http.handlers.headers",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "replace": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\nobject\nModule: http.handlers.headers",
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "replace": {
                                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\nstring\nModule: http.handlers.headers",
                                            "type": "string"
                                        },
                                        "search": {
                                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\nstring\nModule: http.handlers.headers",
                                            "type": "string"
                                        },
                                        "search_regexp": {
                                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\nstring\nModule: http.handlers.headers",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "set": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\nobject\nModule: http.handlers.headers",
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "response": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\nobject\nModule: http.handlers.headers",
                    "type": "object",
                    "properties": {
                        "add": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\nobject\nModule: http.handlers.headers",
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "deferred": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\nboolean\nModule: http.handlers.headers",
                            "type": "boolean"
                        },
                        "delete": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\narray\nModule: http.handlers.headers",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "replace": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\nobject\nModule: http.handlers.headers",
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "replace": {
                                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\nstring\nModule: http.handlers.headers",
                                            "type": "string"
                                        },
                                        "search": {
                                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\nstring\nModule: http.handlers.headers",
                                            "type": "string"
                                        },
                                        "search_regexp": {
                                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\nstring\nModule: http.handlers.headers",
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "require": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\nobject\nModule: http.handlers.headers",
                            "type": "object",
                            "properties": {
                                "headers": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\nobject\nModule: http.handlers.headers",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "status_code": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\narray\nModule: http.handlers.headers",
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    }
                                }
                            }
                        },
                        "set": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/headers#Handler\nobject\nModule: http.handlers.headers",
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "http.handlers.hmac": {
            "description": "https://pkg.go.dev/github.com/abiosoft/caddy-hmac#HMAC\nobject\nModule: http.handlers.hmac",
            "type": "object",
            "properties": {
                "algorithm": {
                    "description": "https://pkg.go.dev/github.com/abiosoft/caddy-hmac#HMAC\nstring\nModule: http.handlers.hmac",
                    "type": "string"
                },
                "name": {
                    "description": "https://pkg.go.dev/github.com/abiosoft/caddy-hmac#HMAC\nstring\nModule: http.handlers.hmac",
                    "type": "string"
                },
                "secret": {
                    "description": "https://pkg.go.dev/github.com/abiosoft/caddy-hmac#HMAC\nstring\nModule: http.handlers.hmac",
                    "type": "string"
                }
            }
        },
        "http.handlers.json_parse": {
            "description": "https://pkg.go.dev/github.com/abiosoft/caddy-json-parse#JSONParse\nobject\nModule: http.handlers.json_parse",
            "type": "object",
            "properties": {
                "strict": {
                    "description": "https://pkg.go.dev/github.com/abiosoft/caddy-json-parse#JSONParse\nboolean\nModule: http.handlers.json_parse",
                    "type": "boolean"
                }
            }
        },
        "http.handlers.request_body": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/requestbody#RequestBody\nobject\nModule: http.handlers.request_body",
            "type": "object",
            "properties": {
                "max_size": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/requestbody#RequestBody\nnumber\nModule: http.handlers.request_body",
                    "type": "number"
                }
            }
        },
        "http.handlers.reverse_proxy": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nobject\nModule: http.handlers.reverse_proxy",
            "type": "object",
            "properties": {
                "buffer_requests": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nboolean\nModule: http.handlers.reverse_proxy",
                    "type": "boolean"
                },
                "circuit_breaker": {
                    "description": "object\nModule: http.reverse_proxy.circuit_breakers",
                    "type": "object"
                },
                "flush_interval": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nnumber\nModule: http.handlers.reverse_proxy",
                    "type": "number"
                },
                "headers": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nobject\nModule: http.handlers.reverse_proxy",
                    "type": "object",
                    "properties": {
                        "request": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nobject\nModule: http.handlers.reverse_proxy",
                            "type": "object",
                            "properties": {
                                "add": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nobject\nModule: http.handlers.reverse_proxy",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "delete": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\narray\nModule: http.handlers.reverse_proxy",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "replace": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nobject\nModule: http.handlers.reverse_proxy",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "replace": {
                                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nstring\nModule: http.handlers.reverse_proxy",
                                                    "type": "string"
                                                },
                                                "search": {
                                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nstring\nModule: http.handlers.reverse_proxy",
                                                    "type": "string"
                                                },
                                                "search_regexp": {
                                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nstring\nModule: http.handlers.reverse_proxy",
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "set": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nobject\nModule: http.handlers.reverse_proxy",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "response": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nobject\nModule: http.handlers.reverse_proxy",
                            "type": "object",
                            "properties": {
                                "add": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nobject\nModule: http.handlers.reverse_proxy",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "deferred": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nboolean\nModule: http.handlers.reverse_proxy",
                                    "type": "boolean"
                                },
                                "delete": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\narray\nModule: http.handlers.reverse_proxy",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "replace": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nobject\nModule: http.handlers.reverse_proxy",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "replace": {
                                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nstring\nModule: http.handlers.reverse_proxy",
                                                    "type": "string"
                                                },
                                                "search": {
                                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nstring\nModule: http.handlers.reverse_proxy",
                                                    "type": "string"
                                                },
                                                "search_regexp": {
                                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nstring\nModule: http.handlers.reverse_proxy",
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "require": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nobject\nModule: http.handlers.reverse_proxy",
                                    "type": "object",
                                    "properties": {
                                        "headers": {
                                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nobject\nModule: http.handlers.reverse_proxy",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "status_code": {
                                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\narray\nModule: http.handlers.reverse_proxy",
                                            "type": "array",
                                            "items": {
                                                "type": "number"
                                            }
                                        }
                                    }
                                },
                                "set": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nobject\nModule: http.handlers.reverse_proxy",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "health_checks": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nobject\nModule: http.handlers.reverse_proxy",
                    "type": "object",
                    "properties": {
                        "active": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nobject\nModule: http.handlers.reverse_proxy",
                            "type": "object",
                            "properties": {
                                "expect_body": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nstring\nModule: http.handlers.reverse_proxy",
                                    "type": "string"
                                },
                                "expect_status": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nnumber\nModule: http.handlers.reverse_proxy",
                                    "type": "number"
                                },
                                "headers": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nobject\nModule: http.handlers.reverse_proxy",
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "interval": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nnumber\nModule: http.handlers.reverse_proxy",
                                    "type": "number"
                                },
                                "max_size": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nnumber\nModule: http.handlers.reverse_proxy",
                                    "type": "number"
                                },
                                "path": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nstring\nModule: http.handlers.reverse_proxy",
                                    "type": "string"
                                },
                                "port": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nnumber\nModule: http.handlers.reverse_proxy",
                                    "type": "number"
                                },
                                "timeout": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nnumber\nModule: http.handlers.reverse_proxy",
                                    "type": "number"
                                }
                            }
                        },
                        "passive": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nobject\nModule: http.handlers.reverse_proxy",
                            "type": "object",
                            "properties": {
                                "fail_duration": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nnumber\nModule: http.handlers.reverse_proxy",
                                    "type": "number"
                                },
                                "max_fails": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nnumber\nModule: http.handlers.reverse_proxy",
                                    "type": "number"
                                },
                                "unhealthy_latency": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nnumber\nModule: http.handlers.reverse_proxy",
                                    "type": "number"
                                },
                                "unhealthy_request_count": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nnumber\nModule: http.handlers.reverse_proxy",
                                    "type": "number"
                                },
                                "unhealthy_status": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\narray\nModule: http.handlers.reverse_proxy",
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    }
                                }
                            }
                        }
                    }
                },
                "load_balancing": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nobject\nModule: http.handlers.reverse_proxy",
                    "type": "object",
                    "properties": {
                        "retry_match": {
                            "description": "array\nModule: http.matchers",
                            "type": "array",
                            "items": {
                                "properties": {
                                    "execnopmatch": {
                                        "$ref": "#/definitions/http.matchers.execnopmatch"
                                    },
                                    "expression": {
                                        "$ref": "#/definitions/http.matchers.expression"
                                    },
                                    "file": {
                                        "$ref": "#/definitions/http.matchers.file"
                                    },
                                    "header": {
                                        "$ref": "#/definitions/http.matchers.header"
                                    },
                                    "header_regexp": {
                                        "$ref": "#/definitions/http.matchers.header_regexp"
                                    },
                                    "host": {
                                        "$ref": "#/definitions/http.matchers.host"
                                    },
                                    "method": {
                                        "$ref": "#/definitions/http.matchers.method"
                                    },
                                    "not": {
                                        "$ref": "#/definitions/http.matchers.not"
                                    },
                                    "path": {
                                        "$ref": "#/definitions/http.matchers.path"
                                    },
                                    "path_regexp": {
                                        "$ref": "#/definitions/http.matchers.path_regexp"
                                    },
                                    "protocol": {
                                        "$ref": "#/definitions/http.matchers.protocol"
                                    },
                                    "query": {
                                        "$ref": "#/definitions/http.matchers.query"
                                    },
                                    "remote_ip": {
                                        "$ref": "#/definitions/http.matchers.remote_ip"
                                    },
                                    "vars": {
                                        "$ref": "#/definitions/http.matchers.vars"
                                    },
                                    "vars_regexp": {
                                        "$ref": "#/definitions/http.matchers.vars_regexp"
                                    }
                                }
                            }
                        },
                        "selection_policy": {
                            "description": "array\nModule: http.reverse_proxy.selection_policies",
                            "type": "array",
                            "items": {
                                "required": [
                                    "policy"
                                ],
                                "allOf": [
                                    {
                                        "if": {
                                            "properties": {
                                                "policy": {
                                                    "const": "round_robin"
                                                }
                                            }
                                        },
                                        "then": {
                                            "$ref": "#/definitions/http.reverse_proxy.selection_policies.round_robin"
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "policy": {
                                                    "const": "uri_hash"
                                                }
                                            }
                                        },
                                        "then": {
                                            "$ref": "#/definitions/http.reverse_proxy.selection_policies.uri_hash"
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "policy": {
                                                    "const": "first"
                                                }
                                            }
                                        },
                                        "then": {
                                            "$ref": "#/definitions/http.reverse_proxy.selection_policies.first"
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "policy": {
                                                    "const": "header"
                                                }
                                            }
                                        },
                                        "then": {
                                            "$ref": "#/definitions/http.reverse_proxy.selection_policies.header"
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "policy": {
                                                    "const": "ip_hash"
                                                }
                                            }
                                        },
                                        "then": {
                                            "$ref": "#/definitions/http.reverse_proxy.selection_policies.ip_hash"
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "policy": {
                                                    "const": "least_conn"
                                                }
                                            }
                                        },
                                        "then": {
                                            "$ref": "#/definitions/http.reverse_proxy.selection_policies.least_conn"
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "policy": {
                                                    "const": "random"
                                                }
                                            }
                                        },
                                        "then": {
                                            "$ref": "#/definitions/http.reverse_proxy.selection_policies.random"
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "policy": {
                                                    "const": "random_choose"
                                                }
                                            }
                                        },
                                        "then": {
                                            "$ref": "#/definitions/http.reverse_proxy.selection_policies.random_choose"
                                        }
                                    },
                                    {
                                        "properties": {
                                            "policy": {
                                                "description": "policy name\nstring\nModule: http.reverse_proxy.selection_policies",
                                                "type": "string",
                                                "enum": [
                                                    "round_robin",
                                                    "uri_hash",
                                                    "first",
                                                    "header",
                                                    "ip_hash",
                                                    "least_conn",
                                                    "random",
                                                    "random_choose"
                                                ]
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        "try_duration": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nnumber\nModule: http.handlers.reverse_proxy",
                            "type": "number"
                        },
                        "try_interval": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nnumber\nModule: http.handlers.reverse_proxy",
                            "type": "number"
                        }
                    }
                },
                "transport": {
                    "description": "array\nModule: http.reverse_proxy.transport",
                    "type": "array",
                    "items": {
                        "required": [
                            "protocol"
                        ],
                        "allOf": [
                            {
                                "if": {
                                    "properties": {
                                        "protocol": {
                                            "const": "fastcgi"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/http.reverse_proxy.transport.fastcgi"
                                }
                            },
                            {
                                "if": {
                                    "properties": {
                                        "protocol": {
                                            "const": "http"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/http.reverse_proxy.transport.http"
                                }
                            },
                            {
                                "properties": {
                                    "protocol": {
                                        "description": "protocol name\nstring\nModule: http.reverse_proxy.transport",
                                        "type": "string",
                                        "enum": [
                                            "fastcgi",
                                            "http"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                },
                "upstreams": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\narray\nModule: http.handlers.reverse_proxy",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "dial": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nstring\nModule: http.handlers.reverse_proxy",
                                "type": "string"
                            },
                            "lookup_srv": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nstring\nModule: http.handlers.reverse_proxy",
                                "type": "string"
                            },
                            "max_requests": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#Handler\nnumber\nModule: http.handlers.reverse_proxy",
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        "http.handlers.rewrite": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/rewrite#Rewrite\nobject\nModule: http.handlers.rewrite",
            "type": "object",
            "properties": {
                "method": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/rewrite#Rewrite\nstring\nModule: http.handlers.rewrite",
                    "type": "string"
                },
                "strip_path_prefix": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/rewrite#Rewrite\nstring\nModule: http.handlers.rewrite",
                    "type": "string"
                },
                "strip_path_suffix": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/rewrite#Rewrite\nstring\nModule: http.handlers.rewrite",
                    "type": "string"
                },
                "uri": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/rewrite#Rewrite\nstring\nModule: http.handlers.rewrite",
                    "type": "string"
                },
                "uri_substring": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/rewrite#Rewrite\narray\nModule: http.handlers.rewrite",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "find": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/rewrite#Rewrite\nstring\nModule: http.handlers.rewrite",
                                "type": "string"
                            },
                            "limit": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/rewrite#Rewrite\nnumber\nModule: http.handlers.rewrite",
                                "type": "number"
                            },
                            "replace": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/rewrite#Rewrite\nstring\nModule: http.handlers.rewrite",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "http.handlers.static_response": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#StaticResponse\nobject\nModule: http.handlers.static_response",
            "type": "object",
            "properties": {
                "body": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#StaticResponse\nstring\nModule: http.handlers.static_response",
                    "type": "string"
                },
                "close": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#StaticResponse\nboolean\nModule: http.handlers.static_response",
                    "type": "boolean"
                },
                "headers": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#StaticResponse\nobject\nModule: http.handlers.static_response",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "status_code": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#StaticResponse\nstring\nModule: http.handlers.static_response",
                    "type": "string"
                }
            }
        },
        "http.handlers.subroute": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#Subroute\nobject\nModule: http.handlers.subroute",
            "type": "object",
            "properties": {
                "errors": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#Subroute\nobject\nModule: http.handlers.subroute",
                    "type": "object",
                    "properties": {
                        "routes": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#Subroute\narray\nModule: http.handlers.subroute",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "group": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#Subroute\nstring\nModule: http.handlers.subroute",
                                        "type": "string"
                                    },
                                    "handle": {
                                        "description": "array\nModule: http.handlers",
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "handler"
                                            ],
                                            "allOf": [
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "visitor_ip"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.visitor_ip"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "encode"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.encode"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "static_response"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.static_response"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "subroute"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.subroute"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "exec"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.exec"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "file_server"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.file_server"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "rewrite"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.rewrite"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "vars"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.vars"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "headers"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.headers"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "hmac"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.hmac"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "reverse_proxy"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.reverse_proxy"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "request_body"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.request_body"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "templates"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.templates"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "authentication"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.authentication"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "error"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.error"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "handler": {
                                                                "const": "json_parse"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/http.handlers.json_parse"
                                                    }
                                                },
                                                {
                                                    "properties": {
                                                        "handler": {
                                                            "description": "handler name\nstring\nModule: http.handlers",
                                                            "type": "string",
                                                            "enum": [
                                                                "visitor_ip",
                                                                "encode",
                                                                "static_response",
                                                                "subroute",
                                                                "exec",
                                                                "file_server",
                                                                "rewrite",
                                                                "vars",
                                                                "headers",
                                                                "hmac",
                                                                "reverse_proxy",
                                                                "request_body",
                                                                "templates",
                                                                "authentication",
                                                                "error",
                                                                "json_parse"
                                                            ]
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "match": {
                                        "description": "array\nModule: http.matchers",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "execnopmatch": {
                                                    "$ref": "#/definitions/http.matchers.execnopmatch"
                                                },
                                                "expression": {
                                                    "$ref": "#/definitions/http.matchers.expression"
                                                },
                                                "file": {
                                                    "$ref": "#/definitions/http.matchers.file"
                                                },
                                                "header": {
                                                    "$ref": "#/definitions/http.matchers.header"
                                                },
                                                "header_regexp": {
                                                    "$ref": "#/definitions/http.matchers.header_regexp"
                                                },
                                                "host": {
                                                    "$ref": "#/definitions/http.matchers.host"
                                                },
                                                "method": {
                                                    "$ref": "#/definitions/http.matchers.method"
                                                },
                                                "not": {
                                                    "$ref": "#/definitions/http.matchers.not"
                                                },
                                                "path": {
                                                    "$ref": "#/definitions/http.matchers.path"
                                                },
                                                "path_regexp": {
                                                    "$ref": "#/definitions/http.matchers.path_regexp"
                                                },
                                                "protocol": {
                                                    "$ref": "#/definitions/http.matchers.protocol"
                                                },
                                                "query": {
                                                    "$ref": "#/definitions/http.matchers.query"
                                                },
                                                "remote_ip": {
                                                    "$ref": "#/definitions/http.matchers.remote_ip"
                                                },
                                                "vars": {
                                                    "$ref": "#/definitions/http.matchers.vars"
                                                },
                                                "vars_regexp": {
                                                    "$ref": "#/definitions/http.matchers.vars_regexp"
                                                }
                                            }
                                        }
                                    },
                                    "terminal": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#Subroute\nboolean\nModule: http.handlers.subroute",
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "routes": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#Subroute\narray\nModule: http.handlers.subroute",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "group": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#Subroute\nstring\nModule: http.handlers.subroute",
                                "type": "string"
                            },
                            "handle": {
                                "description": "array\nModule: http.handlers",
                                "type": "array",
                                "items": {
                                    "required": [
                                        "handler"
                                    ],
                                    "allOf": [
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "vars"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.vars"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "headers"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.headers"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "hmac"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.hmac"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "reverse_proxy"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.reverse_proxy"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "request_body"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.request_body"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "templates"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.templates"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "authentication"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.authentication"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "error"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.error"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "json_parse"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.json_parse"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "visitor_ip"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.visitor_ip"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "encode"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.encode"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "static_response"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.static_response"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "subroute"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.subroute"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "exec"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.exec"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "file_server"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.file_server"
                                            }
                                        },
                                        {
                                            "if": {
                                                "properties": {
                                                    "handler": {
                                                        "const": "rewrite"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/http.handlers.rewrite"
                                            }
                                        },
                                        {
                                            "properties": {
                                                "handler": {
                                                    "description": "handler name\nstring\nModule: http.handlers",
                                                    "type": "string",
                                                    "enum": [
                                                        "vars",
                                                        "headers",
                                                        "hmac",
                                                        "reverse_proxy",
                                                        "request_body",
                                                        "templates",
                                                        "authentication",
                                                        "error",
                                                        "json_parse",
                                                        "visitor_ip",
                                                        "encode",
                                                        "static_response",
                                                        "subroute",
                                                        "exec",
                                                        "file_server",
                                                        "rewrite"
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            "match": {
                                "description": "array\nModule: http.matchers",
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "execnopmatch": {
                                            "$ref": "#/definitions/http.matchers.execnopmatch"
                                        },
                                        "expression": {
                                            "$ref": "#/definitions/http.matchers.expression"
                                        },
                                        "file": {
                                            "$ref": "#/definitions/http.matchers.file"
                                        },
                                        "header": {
                                            "$ref": "#/definitions/http.matchers.header"
                                        },
                                        "header_regexp": {
                                            "$ref": "#/definitions/http.matchers.header_regexp"
                                        },
                                        "host": {
                                            "$ref": "#/definitions/http.matchers.host"
                                        },
                                        "method": {
                                            "$ref": "#/definitions/http.matchers.method"
                                        },
                                        "not": {
                                            "$ref": "#/definitions/http.matchers.not"
                                        },
                                        "path": {
                                            "$ref": "#/definitions/http.matchers.path"
                                        },
                                        "path_regexp": {
                                            "$ref": "#/definitions/http.matchers.path_regexp"
                                        },
                                        "protocol": {
                                            "$ref": "#/definitions/http.matchers.protocol"
                                        },
                                        "query": {
                                            "$ref": "#/definitions/http.matchers.query"
                                        },
                                        "remote_ip": {
                                            "$ref": "#/definitions/http.matchers.remote_ip"
                                        },
                                        "vars": {
                                            "$ref": "#/definitions/http.matchers.vars"
                                        },
                                        "vars_regexp": {
                                            "$ref": "#/definitions/http.matchers.vars_regexp"
                                        }
                                    }
                                }
                            },
                            "terminal": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#Subroute\nboolean\nModule: http.handlers.subroute",
                                "type": "boolean"
                            }
                        }
                    }
                }
            }
        },
        "http.handlers.templates": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/templates#Templates\nobject\nModule: http.handlers.templates",
            "type": "object",
            "properties": {
                "delimiters": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/templates#Templates\narray\nModule: http.handlers.templates",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "file_root": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/templates#Templates\nstring\nModule: http.handlers.templates",
                    "type": "string"
                },
                "mime_types": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/templates#Templates\narray\nModule: http.handlers.templates",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "http.handlers.vars": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#VarsMiddleware\nobject\nModule: http.handlers.vars",
            "type": "object",
            "additionalProperties": {}
        },
        "http.handlers.visitor_ip": {
            "description": "https://pkg.go.dev/github.com/abiosoft/caddy-webhooks#Middleware\nobject\nModule: http.handlers.visitor_ip",
            "type": "object",
            "properties": {
                "output": {
                    "description": "https://pkg.go.dev/github.com/abiosoft/caddy-webhooks#Middleware\nstring\nModule: http.handlers.visitor_ip",
                    "type": "string"
                }
            }
        },
        "http.matchers.execnopmatch": {
            "description": "https://pkg.go.dev/github.com/abiosoft/caddy-exec#NopMatcher\nobject\nModule: http.matchers.execnopmatch",
            "type": "object",
            "properties": {
                "label": {
                    "description": "https://pkg.go.dev/github.com/abiosoft/caddy-exec#NopMatcher\nstring\nModule: http.matchers.execnopmatch",
                    "type": "string"
                }
            }
        },
        "http.matchers.expression": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchExpression\nobject\nModule: http.matchers.expression",
            "type": "object"
        },
        "http.matchers.file": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#MatchFile\nobject\nModule: http.matchers.file",
            "type": "object",
            "properties": {
                "root": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#MatchFile\nstring\nModule: http.matchers.file",
                    "type": "string"
                },
                "split_path": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#MatchFile\narray\nModule: http.matchers.file",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "try_files": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#MatchFile\narray\nModule: http.matchers.file",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "try_policy": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/fileserver#MatchFile\nstring\nModule: http.matchers.file",
                    "type": "string"
                }
            }
        },
        "http.matchers.header": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchHeader\nobject\nModule: http.matchers.header",
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "http.matchers.header_regexp": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchHeaderRE\nobject\nModule: http.matchers.header_regexp",
            "type": "object",
            "additionalProperties": {
                "properties": {
                    "name": {
                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchHeaderRE\nstring\nModule: http.matchers.header_regexp",
                        "type": "string"
                    },
                    "pattern": {
                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchHeaderRE\nstring\nModule: http.matchers.header_regexp",
                        "type": "string"
                    }
                }
            }
        },
        "http.matchers.host": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchHost\narray\nModule: http.matchers.host",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "http.matchers.method": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchMethod\narray\nModule: http.matchers.method",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "http.matchers.not": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchNot\nobject\nModule: http.matchers.not",
            "type": "object"
        },
        "http.matchers.path": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchPath\narray\nModule: http.matchers.path",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "http.matchers.path_regexp": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchPathRE\nobject\nModule: http.matchers.path_regexp",
            "type": "object",
            "properties": {
                "name": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchPathRE\nstring\nModule: http.matchers.path_regexp",
                    "type": "string"
                },
                "pattern": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchPathRE\nstring\nModule: http.matchers.path_regexp",
                    "type": "string"
                }
            }
        },
        "http.matchers.protocol": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchProtocol\nstring\nModule: http.matchers.protocol",
            "type": "string"
        },
        "http.matchers.query": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchQuery\nobject\nModule: http.matchers.query",
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "http.matchers.remote_ip": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchRemoteIP\nobject\nModule: http.matchers.remote_ip",
            "type": "object",
            "properties": {
                "ranges": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchRemoteIP\narray\nModule: http.matchers.remote_ip",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "http.matchers.vars": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#VarsMatcher\nobject\nModule: http.matchers.vars",
            "type": "object",
            "additionalProperties": {}
        },
        "http.matchers.vars_regexp": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchVarsRE\nobject\nModule: http.matchers.vars_regexp",
            "type": "object",
            "additionalProperties": {
                "properties": {
                    "name": {
                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchVarsRE\nstring\nModule: http.matchers.vars_regexp",
                        "type": "string"
                    },
                    "pattern": {
                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp#MatchVarsRE\nstring\nModule: http.matchers.vars_regexp",
                        "type": "string"
                    }
                }
            }
        },
        "http.reverse_proxy.selection_policies.first": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#FirstSelection\nobject\nModule: http.reverse_proxy.selection_policies.first",
            "type": "object"
        },
        "http.reverse_proxy.selection_policies.header": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HeaderHashSelection\nobject\nModule: http.reverse_proxy.selection_policies.header",
            "type": "object",
            "properties": {
                "field": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HeaderHashSelection\nstring\nModule: http.reverse_proxy.selection_policies.header",
                    "type": "string"
                }
            }
        },
        "http.reverse_proxy.selection_policies.ip_hash": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#IPHashSelection\nobject\nModule: http.reverse_proxy.selection_policies.ip_hash",
            "type": "object"
        },
        "http.reverse_proxy.selection_policies.least_conn": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#LeastConnSelection\nobject\nModule: http.reverse_proxy.selection_policies.least_conn",
            "type": "object"
        },
        "http.reverse_proxy.selection_policies.random": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#RandomSelection\nobject\nModule: http.reverse_proxy.selection_policies.random",
            "type": "object"
        },
        "http.reverse_proxy.selection_policies.random_choose": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#RandomChoiceSelection\nobject\nModule: http.reverse_proxy.selection_policies.random_choose",
            "type": "object",
            "properties": {
                "choose": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#RandomChoiceSelection\nnumber\nModule: http.reverse_proxy.selection_policies.random_choose",
                    "type": "number"
                }
            }
        },
        "http.reverse_proxy.selection_policies.round_robin": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#RoundRobinSelection\nobject\nModule: http.reverse_proxy.selection_policies.round_robin",
            "type": "object"
        },
        "http.reverse_proxy.selection_policies.uri_hash": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#URIHashSelection\nobject\nModule: http.reverse_proxy.selection_policies.uri_hash",
            "type": "object"
        },
        "http.reverse_proxy.transport.fastcgi": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy/fastcgi#Transport\nobject\nModule: http.reverse_proxy.transport.fastcgi",
            "type": "object",
            "properties": {
                "dial_timeout": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy/fastcgi#Transport\nnumber\nModule: http.reverse_proxy.transport.fastcgi",
                    "type": "number"
                },
                "env": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy/fastcgi#Transport\nobject\nModule: http.reverse_proxy.transport.fastcgi",
                    "type": "object",
                    "additionalProperties": {}
                },
                "read_timeout": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy/fastcgi#Transport\nnumber\nModule: http.reverse_proxy.transport.fastcgi",
                    "type": "number"
                },
                "root": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy/fastcgi#Transport\nstring\nModule: http.reverse_proxy.transport.fastcgi",
                    "type": "string"
                },
                "split_path": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy/fastcgi#Transport\narray\nModule: http.reverse_proxy.transport.fastcgi",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "write_timeout": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy/fastcgi#Transport\nnumber\nModule: http.reverse_proxy.transport.fastcgi",
                    "type": "number"
                }
            }
        },
        "http.reverse_proxy.transport.http": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nobject\nModule: http.reverse_proxy.transport.http",
            "type": "object",
            "properties": {
                "compression": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nboolean\nModule: http.reverse_proxy.transport.http",
                    "type": "boolean"
                },
                "dial_fallback_delay": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nnumber\nModule: http.reverse_proxy.transport.http",
                    "type": "number"
                },
                "dial_timeout": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nnumber\nModule: http.reverse_proxy.transport.http",
                    "type": "number"
                },
                "expect_continue_timeout": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nnumber\nModule: http.reverse_proxy.transport.http",
                    "type": "number"
                },
                "keep_alive": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nobject\nModule: http.reverse_proxy.transport.http",
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nboolean\nModule: http.reverse_proxy.transport.http",
                            "type": "boolean"
                        },
                        "idle_timeout": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nnumber\nModule: http.reverse_proxy.transport.http",
                            "type": "number"
                        },
                        "max_idle_conns": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nnumber\nModule: http.reverse_proxy.transport.http",
                            "type": "number"
                        },
                        "max_idle_conns_per_host": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nnumber\nModule: http.reverse_proxy.transport.http",
                            "type": "number"
                        },
                        "probe_interval": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nnumber\nModule: http.reverse_proxy.transport.http",
                            "type": "number"
                        }
                    }
                },
                "max_conns_per_host": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nnumber\nModule: http.reverse_proxy.transport.http",
                    "type": "number"
                },
                "max_response_header_size": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nnumber\nModule: http.reverse_proxy.transport.http",
                    "type": "number"
                },
                "read_buffer_size": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nnumber\nModule: http.reverse_proxy.transport.http",
                    "type": "number"
                },
                "response_header_timeout": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nnumber\nModule: http.reverse_proxy.transport.http",
                    "type": "number"
                },
                "tls": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nobject\nModule: http.reverse_proxy.transport.http",
                    "type": "object",
                    "properties": {
                        "client_certificate_file": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nstring\nModule: http.reverse_proxy.transport.http",
                            "type": "string"
                        },
                        "client_certificate_key_file": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nstring\nModule: http.reverse_proxy.transport.http",
                            "type": "string"
                        },
                        "handshake_timeout": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nnumber\nModule: http.reverse_proxy.transport.http",
                            "type": "number"
                        },
                        "insecure_skip_verify": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nboolean\nModule: http.reverse_proxy.transport.http",
                            "type": "boolean"
                        },
                        "root_ca_pem_files": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\narray\nModule: http.reverse_proxy.transport.http",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "root_ca_pool": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\narray\nModule: http.reverse_proxy.transport.http",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "server_name": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nstring\nModule: http.reverse_proxy.transport.http",
                            "type": "string"
                        }
                    }
                },
                "versions": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\narray\nModule: http.reverse_proxy.transport.http",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "write_buffer_size": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddyhttp/reverseproxy#HTTPTransport\nnumber\nModule: http.reverse_proxy.transport.http",
                    "type": "number"
                }
            }
        },
        "pki": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI\nobject\nModule: pki",
            "type": "object",
            "properties": {
                "certificate_authorities": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI\nobject\nModule: pki",
                    "type": "object",
                    "additionalProperties": {
                        "properties": {
                            "install_trust": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI\nboolean\nModule: pki",
                                "type": "boolean"
                            },
                            "intermediate": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI\nobject\nModule: pki",
                                "type": "object",
                                "properties": {
                                    "certificate": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI\nstring\nModule: pki",
                                        "type": "string"
                                    },
                                    "format": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI\nstring\nModule: pki",
                                        "type": "string"
                                    },
                                    "private_key": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI\nstring\nModule: pki",
                                        "type": "string"
                                    }
                                }
                            },
                            "intermediate_common_name": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI\nstring\nModule: pki",
                                "type": "string"
                            },
                            "name": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI\nstring\nModule: pki",
                                "type": "string"
                            },
                            "root": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI\nobject\nModule: pki",
                                "type": "object",
                                "properties": {
                                    "certificate": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI\nstring\nModule: pki",
                                        "type": "string"
                                    },
                                    "format": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI\nstring\nModule: pki",
                                        "type": "string"
                                    },
                                    "private_key": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI\nstring\nModule: pki",
                                        "type": "string"
                                    }
                                }
                            },
                            "root_common_name": {
                                "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddypki#PKI\nstring\nModule: pki",
                                "type": "string"
                            },
                            "storage": {
                                "description": "array\nModule: caddy.storage",
                                "type": "array",
                                "items": {
                                    "required": [
                                        "module"
                                    ],
                                    "allOf": [
                                        {
                                            "if": {
                                                "properties": {
                                                    "module": {
                                                        "const": "file_system"
                                                    }
                                                }
                                            },
                                            "then": {
                                                "$ref": "#/definitions/caddy.storage.file_system"
                                            }
                                        },
                                        {
                                            "properties": {
                                                "module": {
                                                    "description": "module name\nstring\nModule: caddy.storage",
                                                    "type": "string",
                                                    "enum": [
                                                        "file_system"
                                                    ]
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "tls": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS\nobject\nModule: tls",
            "type": "object",
            "properties": {
                "automation": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS\nobject\nModule: tls",
                    "type": "object",
                    "properties": {
                        "ocsp_interval": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS\nnumber\nModule: tls",
                            "type": "number"
                        },
                        "on_demand": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS\nobject\nModule: tls",
                            "type": "object",
                            "properties": {
                                "ask": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS\nstring\nModule: tls",
                                    "type": "string"
                                },
                                "rate_limit": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS\nobject\nModule: tls",
                                    "type": "object",
                                    "properties": {
                                        "burst": {
                                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS\nnumber\nModule: tls",
                                            "type": "number"
                                        },
                                        "interval": {
                                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS\nnumber\nModule: tls",
                                            "type": "number"
                                        }
                                    }
                                }
                            }
                        },
                        "policies": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS\narray\nModule: tls",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "issuer": {
                                        "description": "array\nModule: tls.issuance",
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "module"
                                            ],
                                            "allOf": [
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "module": {
                                                                "const": "acme"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/tls.issuance.acme"
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "module": {
                                                                "const": "internal"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/tls.issuance.internal"
                                                    }
                                                },
                                                {
                                                    "properties": {
                                                        "module": {
                                                            "description": "module name\nstring\nModule: tls.issuance",
                                                            "type": "string",
                                                            "enum": [
                                                                "acme",
                                                                "internal"
                                                            ]
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "key_type": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS\nstring\nModule: tls",
                                        "type": "string"
                                    },
                                    "must_staple": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS\nboolean\nModule: tls",
                                        "type": "boolean"
                                    },
                                    "on_demand": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS\nboolean\nModule: tls",
                                        "type": "boolean"
                                    },
                                    "renewal_window_ratio": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS\nobject\nModule: tls",
                                        "type": "object"
                                    },
                                    "storage": {
                                        "description": "array\nModule: caddy.storage",
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "module"
                                            ],
                                            "allOf": [
                                                {
                                                    "if": {
                                                        "properties": {
                                                            "module": {
                                                                "const": "file_system"
                                                            }
                                                        }
                                                    },
                                                    "then": {
                                                        "$ref": "#/definitions/caddy.storage.file_system"
                                                    }
                                                },
                                                {
                                                    "properties": {
                                                        "module": {
                                                            "description": "module name\nstring\nModule: caddy.storage",
                                                            "type": "string",
                                                            "enum": [
                                                                "file_system"
                                                            ]
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    "subjects": {
                                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS\narray\nModule: tls",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "renew_interval": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS\nnumber\nModule: tls",
                            "type": "number"
                        }
                    }
                },
                "certificates": {
                    "description": "array\nModule: tls.certificates",
                    "type": "array",
                    "items": {
                        "properties": {
                            "automate": {
                                "$ref": "#/definitions/tls.certificates.automate"
                            },
                            "load_files": {
                                "$ref": "#/definitions/tls.certificates.load_files"
                            },
                            "load_folders": {
                                "$ref": "#/definitions/tls.certificates.load_folders"
                            },
                            "load_pem": {
                                "$ref": "#/definitions/tls.certificates.load_pem"
                            }
                        }
                    }
                },
                "session_tickets": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS\nobject\nModule: tls",
                    "type": "object",
                    "properties": {
                        "disable_rotation": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS\nboolean\nModule: tls",
                            "type": "boolean"
                        },
                        "disabled": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS\nboolean\nModule: tls",
                            "type": "boolean"
                        },
                        "key_source": {
                            "description": "array\nModule: tls.stek",
                            "type": "array",
                            "items": {
                                "required": [
                                    "provider"
                                ],
                                "allOf": [
                                    {
                                        "if": {
                                            "properties": {
                                                "provider": {
                                                    "const": "distributed"
                                                }
                                            }
                                        },
                                        "then": {
                                            "$ref": "#/definitions/tls.stek.distributed"
                                        }
                                    },
                                    {
                                        "if": {
                                            "properties": {
                                                "provider": {
                                                    "const": "standard"
                                                }
                                            }
                                        },
                                        "then": {
                                            "$ref": "#/definitions/tls.stek.standard"
                                        }
                                    },
                                    {
                                        "properties": {
                                            "provider": {
                                                "description": "provider name\nstring\nModule: tls.stek",
                                                "type": "string",
                                                "enum": [
                                                    "distributed",
                                                    "standard"
                                                ]
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        "max_keys": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS\nnumber\nModule: tls",
                            "type": "number"
                        },
                        "rotation_interval": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#TLS\nnumber\nModule: tls",
                            "type": "number"
                        }
                    }
                }
            }
        },
        "tls.certificates.automate": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#AutomateLoader\narray\nModule: tls.certificates.automate",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "tls.certificates.load_files": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#FileLoader\narray\nModule: tls.certificates.load_files",
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "certificate": {
                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#FileLoader\nstring\nModule: tls.certificates.load_files",
                        "type": "string"
                    },
                    "format": {
                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#FileLoader\nstring\nModule: tls.certificates.load_files",
                        "type": "string"
                    },
                    "key": {
                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#FileLoader\nstring\nModule: tls.certificates.load_files",
                        "type": "string"
                    },
                    "tags": {
                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#FileLoader\narray\nModule: tls.certificates.load_files",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "tls.certificates.load_folders": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#FolderLoader\narray\nModule: tls.certificates.load_folders",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "tls.certificates.load_pem": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#PEMLoader\narray\nModule: tls.certificates.load_pem",
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "certificate": {
                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#PEMLoader\nstring\nModule: tls.certificates.load_pem",
                        "type": "string"
                    },
                    "key": {
                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#PEMLoader\nstring\nModule: tls.certificates.load_pem",
                        "type": "string"
                    },
                    "tags": {
                        "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#PEMLoader\narray\nModule: tls.certificates.load_pem",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "tls.handshake_match.sni": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#MatchServerName\narray\nModule: tls.handshake_match.sni",
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "tls.issuance.acme": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer\nobject\nModule: tls.issuance.acme",
            "type": "object",
            "properties": {
                "acme_timeout": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer\nnumber\nModule: tls.issuance.acme",
                    "type": "number"
                },
                "ca": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer\nstring\nModule: tls.issuance.acme",
                    "type": "string"
                },
                "challenges": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer\nobject\nModule: tls.issuance.acme",
                    "type": "object",
                    "properties": {
                        "bind_host": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer\nstring\nModule: tls.issuance.acme",
                            "type": "string"
                        },
                        "dns": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer\nobject\nModule: tls.issuance.acme",
                            "type": "object",
                            "properties": {
                                "provider": {
                                    "description": "object\nModule: dns.providers",
                                    "type": "object"
                                },
                                "ttl": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer\nnumber\nModule: tls.issuance.acme",
                                    "type": "number"
                                }
                            }
                        },
                        "http": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer\nobject\nModule: tls.issuance.acme",
                            "type": "object",
                            "properties": {
                                "alternate_port": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer\nnumber\nModule: tls.issuance.acme",
                                    "type": "number"
                                },
                                "disabled": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer\nboolean\nModule: tls.issuance.acme",
                                    "type": "boolean"
                                }
                            }
                        },
                        "tls-alpn": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer\nobject\nModule: tls.issuance.acme",
                            "type": "object",
                            "properties": {
                                "alternate_port": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer\nnumber\nModule: tls.issuance.acme",
                                    "type": "number"
                                },
                                "disabled": {
                                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer\nboolean\nModule: tls.issuance.acme",
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "email": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer\nstring\nModule: tls.issuance.acme",
                    "type": "string"
                },
                "external_account": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer\nobject\nModule: tls.issuance.acme",
                    "type": "object",
                    "properties": {
                        "hmac": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer\nstring\nModule: tls.issuance.acme",
                            "type": "string"
                        },
                        "key_id": {
                            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer\nstring\nModule: tls.issuance.acme",
                            "type": "string"
                        }
                    }
                },
                "test_ca": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer\nstring\nModule: tls.issuance.acme",
                    "type": "string"
                },
                "trusted_roots_pem_files": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#ACMEIssuer\narray\nModule: tls.issuance.acme",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "tls.issuance.internal": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#InternalIssuer\nobject\nModule: tls.issuance.internal",
            "type": "object",
            "properties": {
                "ca": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#InternalIssuer\nstring\nModule: tls.issuance.internal",
                    "type": "string"
                },
                "lifetime": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#InternalIssuer\nnumber\nModule: tls.issuance.internal",
                    "type": "number"
                },
                "sign_with_root": {
                    "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls#InternalIssuer\nboolean\nModule: tls.issuance.internal",
                    "type": "boolean"
                }
            }
        },
        "tls.stek.distributed": {
            "description": "https://pkg.go.dev/github.com/caddyserver/caddy/v2/modules/caddytls/distributedstek#Provider\nobject\nModule: tls.stek.distributed",
            "type": "object",
            "properties": {
                "storage": {
                    "description": "array\nModule: caddy.storage",
                    "type": "array",
                    "items": {
                        "required": [
                            "module"
                        ],
                        "allOf": [
                            {
                                "if": {
                                    "properties": {
                                        "module": {
                                            "const": "file_system"
                                        }
                                    }
                                },
                                "then": {
                                    "$ref": "#/definitions/caddy.storage.file_system"
                                }
                            },
                            {
                                "properties": {
                                    "module": {
                                        "description": "module name\nstring\nModule: caddy.storage",
                                        "type": "string",
                                        "enum": [
                                            "file_system"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        },
        "tls.stek.standard": {
            "description": "object\nModule: tls.stek.standard",
            "type": "object"
        }
    },
    "properties": {
        "apps": {
            "properties": {
                "exec": {
                    "$ref": "#/definitions/exec"
                },
                "http": {
                    "$ref": "#/definitions/http"
                },
                "pki": {
                    "$ref": "#/definitions/pki"
                },
                "tls": {
                    "$ref": "#/definitions/tls"
                }
            }
        }
    },
    "required": [
        "apps"
    ],
    "additionalItems": true
}